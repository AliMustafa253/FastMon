{
  "contractName": "tradeGame",
  "abi": [
    {
      "inputs": [],
      "name": "cardModValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_card",
          "type": "uint256"
        }
      ],
      "name": "cardOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cardToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "cards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_newCard",
          "type": "uint256"
        }
      ],
      "name": "checkCard",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createPlayer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_cardModValue",
          "type": "uint256"
        }
      ],
      "name": "generateCards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonceForRand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerToPlayer",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "balance",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "round",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "cardsOwned",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "playerNumber",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "playerAddr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "ownerToTrade",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "ownerOffer",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "ownerCard",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "buyerOffer",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "buyerCard",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "tradeComplete",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "tradeAvailable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "ownerAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyerAddr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "playerTurnsDone",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "playerWon",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomCard",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "randomCost",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retCards",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retPlayer",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "balance",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "round",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "cardsOwned",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "playerNumber",
              "type": "uint16"
            },
            {
              "internalType": "address",
              "name": "playerAddr",
              "type": "address"
            }
          ],
          "internalType": "struct initializeGame.Player",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retcurrentRound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retplayerCards",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retplayerScore",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retplayerTurnsDone",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startGame",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTheGame",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPlayers",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "trades",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "ownerOffer",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "ownerCard",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "buyerOffer",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "buyerCard",
          "type": "uint16"
        },
        {
          "internalType": "bool",
          "name": "tradeComplete",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "tradeAvailable",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "ownerAddr",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "buyerAddr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_ownerOffer",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_ownerCard",
          "type": "uint16"
        }
      ],
      "name": "startTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ownerAddr",
          "type": "address"
        }
      ],
      "name": "retTrade",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retAllTrades",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint16",
              "name": "ownerOffer",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "ownerCard",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "buyerOffer",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "buyerCard",
              "type": "uint16"
            },
            {
              "internalType": "bool",
              "name": "tradeComplete",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "tradeAvailable",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "ownerAddr",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "buyerAddr",
              "type": "address"
            }
          ],
          "internalType": "struct tradeGame.tradeCard[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retTradeIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_buyerOffer",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "_buyerCard",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "_ownerAddr",
          "type": "address"
        }
      ],
      "name": "offerTrade",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_tradeConfirm",
          "type": "bool"
        }
      ],
      "name": "tradeComplete",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"cardModValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_card\",\"type\":\"uint256\"}],\"name\":\"cardOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cardToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newCard\",\"type\":\"uint256\"}],\"name\":\"checkCard\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cardModValue\",\"type\":\"uint256\"}],\"name\":\"generateCards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonceForRand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_buyerOffer\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_buyerCard\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_ownerAddr\",\"type\":\"address\"}],\"name\":\"offerTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerToPlayer\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"balance\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"round\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"cardsOwned\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"playerNumber\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"playerAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ownerToTrade\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"ownerOffer\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"ownerCard\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyerOffer\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyerCard\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"tradeComplete\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"tradeAvailable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyerAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playerTurnsDone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"playerWon\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomCard\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomCost\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retAllTrades\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ownerOffer\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"ownerCard\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyerOffer\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyerCard\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"tradeComplete\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"tradeAvailable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyerAddr\",\"type\":\"address\"}],\"internalType\":\"struct tradeGame.tradeCard[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retCards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retPlayer\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"balance\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"round\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"cardsOwned\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"playerNumber\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"playerAddr\",\"type\":\"address\"}],\"internalType\":\"struct initializeGame.Player\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"}],\"name\":\"retTrade\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retTradeIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retcurrentRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retplayerCards\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retplayerScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retplayerTurnsDone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startGame\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTheGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_ownerOffer\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_ownerCard\",\"type\":\"uint16\"}],\"name\":\"startTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPlayers\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_tradeConfirm\",\"type\":\"bool\"}],\"name\":\"tradeComplete\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trades\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"ownerOffer\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"ownerCard\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyerOffer\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"buyerCard\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"tradeComplete\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"tradeAvailable\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"ownerAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"buyerAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tradeGame.sol\":\"tradeGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/initializeGame.sol\":{\"keccak256\":\"0x3dca0b41bbe3534f2ce84aebe2d13bc06a9558839ee65b81e7e45ec5baf82de3\",\"urls\":[\"bzz-raw://6b8cee30dbe1eff9221c5e5ade28af4f3288a4781de77d3f088618188c0287b7\",\"dweb:/ipfs/QmbmsjzjhsTQQ99SVLdxGgb9qUQxJbWr13ETavb6tV2EYA\"]},\"project:/contracts/roundsGame.sol\":{\"keccak256\":\"0xe8fe7f99574f57028bc788228db775c99bd7bdce05f5fa4cfe29f9ebe3e71809\",\"urls\":[\"bzz-raw://a7438f2b0bc472ca59bfa3ecadcba6c6224c4b91311cbfa54898bd37128862dd\",\"dweb:/ipfs/QmZi9xZhgJKC5ewBoC6aHWrbrqMLDym3FXezjyrKUDLGD1\"]},\"project:/contracts/tradeGame.sol\":{\"keccak256\":\"0x8e5b3348976f2a4c22ccb2eb5a8993ae9b77f91b70ab7414e1c9f0d44daa1707\",\"urls\":[\"bzz-raw://9812326d3cd09fabe605ef0ac8aefa5c8a11a7ba312615fd06e83384b512a55b\",\"dweb:/ipfs/QmX9R4up7Vtf7isdrz5JQN25XmY9pQtwNBr8z1JmgC5ht5\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:18780:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:6",
                "type": ""
              }
            ],
            "src": "334:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:6",
                "type": ""
              }
            ],
            "src": "417:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:6",
                "type": ""
              }
            ],
            "src": "545:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:6",
                "type": ""
              }
            ],
            "src": "690:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1067:48:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1077:32:6",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1102:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1095:6:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1095:13:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1088:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1088:21:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1077:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1049:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1059:7:6",
                "type": ""
              }
            ],
            "src": "1025:90:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1180:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1197:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1217:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1202:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1202:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1190:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1190:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1190:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1168:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1175:3:6",
                "type": ""
              }
            ],
            "src": "1121:109:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1328:118:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1338:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1350:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1361:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1346:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1338:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1412:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1425:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1436:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1421:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1421:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1374:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1374:65:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1374:65:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1300:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1312:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1323:4:6",
                "type": ""
              }
            ],
            "src": "1236:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1496:45:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1506:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1521:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1528:6:6",
                        "type": "",
                        "value": "0xffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1517:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1517:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1506:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1478:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1488:7:6",
                "type": ""
              }
            ],
            "src": "1452:89:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1589:78:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1645:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1654:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1657:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1647:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1647:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1647:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1612:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1636:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint16",
                              "nodeType": "YulIdentifier",
                              "src": "1619:16:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1619:23:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1609:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1609:34:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1602:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1602:42:6"
                  },
                  "nodeType": "YulIf",
                  "src": "1599:62:6"
                }
              ]
            },
            "name": "validator_revert_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1582:5:6",
                "type": ""
              }
            ],
            "src": "1547:120:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1724:86:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1734:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1756:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1743:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1743:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1734:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1798:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint16",
                      "nodeType": "YulIdentifier",
                      "src": "1772:25:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:32:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1772:32:6"
                }
              ]
            },
            "name": "abi_decode_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1702:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1710:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1718:5:6",
                "type": ""
              }
            ],
            "src": "1673:137:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1861:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1871:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1886:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1893:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1882:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1882:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1871:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1843:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1853:7:6",
                "type": ""
              }
            ],
            "src": "1816:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1993:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2003:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2032:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2014:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2014:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2003:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1975:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1985:7:6",
                "type": ""
              }
            ],
            "src": "1948:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2093:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2150:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2159:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2162:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2152:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2152:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2152:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2116:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2141:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2123:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2123:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2113:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2113:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2106:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2103:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2086:5:6",
                "type": ""
              }
            ],
            "src": "2050:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2230:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2240:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2262:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2249:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2249:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2240:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2305:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2278:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2278:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2208:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2216:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2224:5:6",
                "type": ""
              }
            ],
            "src": "2178:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2421:517:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2467:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2469:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2469:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2469:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2442:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2451:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2438:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2438:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2463:2:6",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2434:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2434:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2431:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2560:116:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2575:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2589:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2579:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2604:62:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2638:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2649:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2634:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2634:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2658:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "2614:19:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2614:52:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2604:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2686:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2701:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2715:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2705:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2731:62:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2765:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2776:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2761:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2761:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2785:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "2741:19:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2741:52:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2731:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2813:118:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2828:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2842:2:6",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2832:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2858:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2893:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2904:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2889:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2889:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2913:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2868:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2868:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2858:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint16t_uint16t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2375:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2386:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2398:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2406:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2414:6:6",
                "type": ""
              }
            ],
            "src": "2323:615:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3009:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3026:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3049:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3031:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3019:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3019:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3019:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2997:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3004:3:6",
                "type": ""
              }
            ],
            "src": "2944:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3166:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3176:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3188:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3199:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3184:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3184:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3176:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3256:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3269:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3280:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3265:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3265:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3212:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3212:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3138:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3150:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3161:4:6",
                "type": ""
              }
            ],
            "src": "3068:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3359:52:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3376:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3398:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "3381:16:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3369:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:36:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3369:36:6"
                }
              ]
            },
            "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3347:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3354:3:6",
                "type": ""
              }
            ],
            "src": "3296:115:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3482:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3499:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3522:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3504:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3504:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3492:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3470:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3477:3:6",
                "type": ""
              }
            ],
            "src": "3417:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3815:683:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3825:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3837:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3848:3:6",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3833:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3833:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3825:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3904:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3917:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3928:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3913:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3913:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3862:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3862:69:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3862:69:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3983:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3996:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4007:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3992:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3992:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3941:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3941:70:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3941:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4063:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4076:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4087:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4072:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4072:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4021:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4021:70:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4021:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4143:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4156:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4167:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4152:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4152:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4101:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4101:70:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4101:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "4219:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4232:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4243:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4228:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4228:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4181:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4181:67:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4181:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value5",
                        "nodeType": "YulIdentifier",
                        "src": "4296:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4309:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4320:3:6",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4305:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4305:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4258:37:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4258:67:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4258:67:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value6",
                        "nodeType": "YulIdentifier",
                        "src": "4379:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4392:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4403:3:6",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4388:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4388:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4335:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4335:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4335:73:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value7",
                        "nodeType": "YulIdentifier",
                        "src": "4462:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4475:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4486:3:6",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4471:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4471:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4418:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4418:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4418:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16_t_bool_t_bool_t_address_t_address__to_t_uint16_t_uint16_t_uint16_t_uint16_t_bool_t_bool_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3731:9:6",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "3743:6:6",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "3751:6:6",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "3759:6:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "3767:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3775:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3783:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3791:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3799:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3810:4:6",
                "type": ""
              }
            ],
            "src": "3541:957:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4578:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4589:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4605:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4599:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4599:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4589:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4561:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4571:6:6",
                "type": ""
              }
            ],
            "src": "4504:114:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4735:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4752:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4757:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4745:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4745:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4745:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4773:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4792:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4797:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4788:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4788:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "4773:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4707:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4712:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "4723:11:6",
                "type": ""
              }
            ],
            "src": "4624:184:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4886:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4896:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "4904:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "4896:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4917:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "4929:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4934:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4925:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4925:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "4917:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "4873:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4881:4:6",
                "type": ""
              }
            ],
            "src": "4814:132:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5007:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5024:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5047:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5029:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5029:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5017:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5017:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5017:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4995:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5002:3:6",
                "type": ""
              }
            ],
            "src": "4952:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5146:99:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5190:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5198:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5156:33:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5156:46:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5156:46:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5211:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5229:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5234:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5225:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5225:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "5211:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5119:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5127:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "5135:10:6",
                "type": ""
              }
            ],
            "src": "5066:179:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5326:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5336:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "5348:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5353:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5344:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5344:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "5336:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "5313:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "5321:4:6",
                "type": ""
              }
            ],
            "src": "5251:113:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5524:608:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5534:68:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5596:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5548:47:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5548:54:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5538:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5611:93:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5692:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5697:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5618:73:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5618:86:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5611:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5713:71:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5778:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "5728:49:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5728:56:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "5717:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5793:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "5807:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "5797:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5883:224:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5897:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5924:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5918:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5918:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "5901:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "5944:70:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "5995:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "6010:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
                            "nodeType": "YulIdentifier",
                            "src": "5951:43:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5951:63:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "5944:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "6027:70:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "6090:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "6037:52:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6037:60:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6027:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5845:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5848:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5842:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5842:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5856:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5858:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5867:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5870:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5863:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5863:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5858:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5827:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5829:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "5838:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "5833:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "5823:284:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6116:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "6123:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6116:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5503:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5510:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5519:3:6",
                "type": ""
              }
            ],
            "src": "5400:732:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6286:225:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6296:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6308:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6319:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6304:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6304:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6296:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6343:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6354:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6339:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6339:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "6362:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6368:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6358:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6358:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6332:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6332:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6332:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6388:116:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6490:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6499:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6396:93:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6396:108:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6388:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6258:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6270:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6281:4:6",
                "type": ""
              }
            ],
            "src": "6138:373:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6583:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6629:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6631:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6631:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6631:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6604:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6613:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6600:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6600:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6625:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6596:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6596:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "6593:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6722:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6737:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6751:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6741:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6766:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6801:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6812:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6797:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6797:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6821:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6776:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6776:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6766:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6553:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6564:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6576:6:6",
                "type": ""
              }
            ],
            "src": "6517:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7054:446:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7064:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7076:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7087:3:6",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7072:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7072:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7064:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7143:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7156:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7167:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7152:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7152:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7101:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7101:69:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7101:69:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7222:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7235:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7246:2:6",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7231:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7231:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7180:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7180:70:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7180:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7302:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7315:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7326:2:6",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7311:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7311:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7260:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7260:70:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7260:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7382:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7395:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7406:2:6",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7391:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7391:18:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7340:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7340:70:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7340:70:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value4",
                        "nodeType": "YulIdentifier",
                        "src": "7464:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7477:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7488:3:6",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7473:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7473:19:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7420:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7420:73:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7420:73:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16_t_address__to_t_uint16_t_uint16_t_uint16_t_uint16_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6994:9:6",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7006:6:6",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7014:6:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7022:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7030:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7038:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7049:4:6",
                "type": ""
              }
            ],
            "src": "6852:648:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7587:389:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7633:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7635:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7635:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7635:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7608:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7617:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7604:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7604:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7629:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7600:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7600:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "7597:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7726:116:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7741:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7755:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7745:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7770:62:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7804:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7815:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7800:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7800:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7824:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "7780:19:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7780:52:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7770:6:6"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7852:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7867:16:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7881:2:6",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7871:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7897:62:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7931:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7942:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7927:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7927:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7951:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "7907:19:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7907:52:6"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7897:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint16t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7549:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7560:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7572:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7580:6:6",
                "type": ""
              }
            ],
            "src": "7506:470:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8035:52:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8052:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8074:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "8057:16:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8057:23:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8045:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8045:36:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8045:36:6"
                }
              ]
            },
            "name": "abi_encode_t_uint16_to_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8023:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8030:3:6",
                "type": ""
              }
            ],
            "src": "7982:105:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8148:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8165:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8188:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "8170:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8170:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8158:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8158:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8158:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8136:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8143:3:6",
                "type": ""
              }
            ],
            "src": "8093:108:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8385:929:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8395:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8411:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8416:4:6",
                        "type": "",
                        "value": "0xa0"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8407:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8407:14:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "8399:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8431:165:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8469:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8499:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8506:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8495:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8495:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8489:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8489:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8473:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8557:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8575:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8580:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8571:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8571:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint16_to_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "8525:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8525:61:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8525:61:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8606:163:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8642:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8672:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8679:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8668:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8668:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8662:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8662:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8646:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8730:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8748:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8753:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8744:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8744:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint16_to_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "8698:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8698:61:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8698:61:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8779:168:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "8820:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8850:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8857:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8846:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8846:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "8840:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8840:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "8824:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "8908:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "8926:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8931:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8922:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8922:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint16_to_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "8876:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8876:61:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8876:61:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "8957:170:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9000:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9030:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9037:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9026:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9026:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9020:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9020:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9004:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9088:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9106:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9111:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9102:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9102:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint16_to_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "9056:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9056:61:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9056:61:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9137:170:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9178:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9208:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9215:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9204:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9204:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "9198:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9198:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "9182:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "9268:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "9286:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9291:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9282:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9282:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "9234:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9234:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9234:63:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Player_$59_memory_ptr_to_t_struct$_Player_$59_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8372:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8379:3:6",
                "type": ""
              }
            ],
            "src": "8275:1039:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9462:169:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9472:27:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9484:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9495:3:6",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9480:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9480:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9472:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9597:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9610:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9621:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9606:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9606:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Player_$59_memory_ptr_to_t_struct$_Player_$59_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9509:87:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9509:115:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9509:115:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_Player_$59_memory_ptr__to_t_struct$_Player_$59_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9434:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9446:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9457:4:6",
                "type": ""
              }
            ],
            "src": "9320:311:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9690:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9700:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9729:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9711:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9711:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9700:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9672:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9682:7:6",
                "type": ""
              }
            ],
            "src": "9637:104:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9828:61:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9845:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9876:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "9850:25:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9850:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9838:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9838:45:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9838:45:6"
                }
              ]
            },
            "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9816:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9823:3:6",
                "type": ""
              }
            ],
            "src": "9747:142:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10009:140:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10019:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10031:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10042:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10027:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10027:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10019:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "10115:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10128:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10139:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10124:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10124:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10055:59:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10055:87:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10055:87:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9981:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9993:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10004:4:6",
                "type": ""
              }
            ],
            "src": "9895:254:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10255:40:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10266:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "10282:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "10276:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10276:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "10266:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10238:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10248:6:6",
                "type": ""
              }
            ],
            "src": "10155:140:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10438:73:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10455:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10460:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10448:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10448:19:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10448:19:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10476:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10495:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10500:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10491:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10491:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "10476:11:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10410:3:6",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10415:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "10426:11:6",
                "type": ""
              }
            ],
            "src": "10301:210:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10615:60:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10625:11:6",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "10633:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "10625:4:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10646:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "10658:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10663:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10654:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10654:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "10646:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "10602:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "10610:4:6",
                "type": ""
              }
            ],
            "src": "10517:158:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10730:50:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10747:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "10767:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "10752:14:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10752:21:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10740:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10740:34:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10740:34:6"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10718:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10725:3:6",
                "type": ""
              }
            ],
            "src": "10681:99:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10958:1468:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10968:28:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10984:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10989:6:6",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10980:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10980:16:6"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "10972:4:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11006:168:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11047:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11077:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11084:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11073:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11073:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11067:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11067:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11051:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "11135:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11153:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11158:4:6",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11149:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11149:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint16_to_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "11103:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11103:61:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11103:61:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11184:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11224:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11254:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11261:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11250:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11250:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11244:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11244:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11228:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "11312:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11330:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11335:4:6",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11326:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11326:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint16_to_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "11280:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11280:61:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11280:61:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11361:168:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11402:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11432:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11439:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11428:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11428:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11422:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11422:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11406:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "11490:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11508:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11513:4:6",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11504:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11504:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint16_to_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "11458:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11458:61:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11458:61:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11539:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11579:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11609:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11616:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11605:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11605:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11599:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11599:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11583:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "11667:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11685:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11690:4:6",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11681:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11681:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint16_to_t_uint16",
                          "nodeType": "YulIdentifier",
                          "src": "11635:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11635:61:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11635:61:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11716:167:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11760:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11790:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11797:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11786:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11786:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11780:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11780:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11764:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "11844:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "11862:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11867:4:6",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11858:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11858:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "11816:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11816:57:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11816:57:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "11893:168:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "11938:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11968:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11975:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11964:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11964:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "11958:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11958:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "11942:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "12022:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12040:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12045:4:6",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12036:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12036:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_bool_to_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "11994:27:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11994:57:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11994:57:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12071:169:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12111:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12141:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12148:4:6",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12137:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12137:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "12131:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12131:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "12115:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "12201:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12219:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12224:4:6",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12215:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12215:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "12167:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12167:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12167:63:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "12250:169:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "12290:43:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "12320:5:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12327:4:6",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12316:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12316:16:6"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "12310:5:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12310:23:6"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "12294:12:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "12380:12:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12398:3:6"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12403:4:6",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12394:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12394:14:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "12346:33:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12346:63:6"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12346:63:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_tradeCard_$860_memory_ptr_to_t_struct$_tradeCard_$860_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10945:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10952:3:6",
                "type": ""
              }
            ],
            "src": "10850:1576:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12564:153:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "12660:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12668:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_tradeCard_$860_memory_ptr_to_t_struct$_tradeCard_$860_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "12574:85:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12574:98:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12574:98:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12681:30:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12699:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12704:6:6",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12695:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12695:16:6"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "12681:10:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_tradeCard_$860_memory_ptr_to_t_struct$_tradeCard_$860_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12537:6:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12545:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "12553:10:6",
                "type": ""
              }
            ],
            "src": "12432:285:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12824:38:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12834:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "12846:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12851:4:6",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12842:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12842:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "12834:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "12811:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "12819:4:6",
                "type": ""
              }
            ],
            "src": "12723:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13112:764:6",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13122:94:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13210:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "13136:73:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13136:80:6"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "13126:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13225:119:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "13332:3:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13337:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13232:99:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13232:112:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "13225:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13353:97:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "13444:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "13368:75:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13368:82:6"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "13357:7:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13459:21:6",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "13473:7:6"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "13463:6:6",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13549:302:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13563:34:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "13590:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "13584:5:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13584:13:6"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "13567:13:6",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13610:122:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "13713:13:6"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13728:3:6"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_tradeCard_$860_memory_ptr_to_t_struct$_tradeCard_$860_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "13617:95:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13617:115:6"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "13610:3:6"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "13745:96:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "13834:6:6"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "13755:78:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13755:86:6"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13745:6:6"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "13511:1:6"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "13514:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13508:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13508:13:6"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "13522:18:6",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "13524:14:6",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "13533:1:6"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "13536:1:6",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "13529:3:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13529:9:6"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "13524:1:6"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "13493:14:6",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "13495:10:6",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "13504:1:6",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "13499:1:6",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "13489:362:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13860:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "13867:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "13860:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "13091:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "13098:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "13107:3:6",
                "type": ""
              }
            ],
            "src": "12936:940:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14082:277:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14092:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14104:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14115:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14100:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14100:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14092:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14139:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14150:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14135:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14135:17:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14158:4:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14164:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14154:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14154:20:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14128:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14128:47:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14128:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14184:168:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "14338:6:6"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14347:4:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14192:145:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14192:160:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14184:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14054:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14066:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14077:4:6",
                "type": ""
              }
            ],
            "src": "13882:477:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14405:76:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14459:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14468:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "14471:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "14461:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14461:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14461:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "14428:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14450:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "14435:14:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14435:21:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "14425:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14425:32:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14418:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14418:40:6"
                  },
                  "nodeType": "YulIf",
                  "src": "14415:60:6"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14398:5:6",
                "type": ""
              }
            ],
            "src": "14365:116:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14536:84:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14546:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "14568:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "14555:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14555:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "14546:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "14608:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "14584:23:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14584:30:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14584:30:6"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "14514:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14522:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "14530:5:6",
                "type": ""
              }
            ],
            "src": "14487:133:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14689:260:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14735:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "14737:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14737:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14737:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14710:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14719:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14706:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14706:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14731:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "14702:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14702:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "14699:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "14828:114:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14843:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14857:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "14847:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14872:60:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14904:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "14915:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14900:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14900:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "14924:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "14882:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14882:50:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "14872:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14659:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "14670:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "14682:6:6",
                "type": ""
              }
            ],
            "src": "14626:323:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15053:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15063:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15075:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15086:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15071:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15071:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15063:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15143:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15156:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15167:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15152:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15152:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15099:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15099:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15099:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15025:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15037:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15048:4:6",
                "type": ""
              }
            ],
            "src": "14955:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15279:122:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15289:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15301:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15312:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15297:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15297:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15289:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15367:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15380:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15391:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15376:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15376:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint16_to_t_uint16_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15325:41:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15325:69:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15325:69:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15251:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15263:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15274:4:6",
                "type": ""
              }
            ],
            "src": "15183:218:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15435:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15452:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15455:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15445:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15445:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15445:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15549:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15552:4:6",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15542:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15542:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15542:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15573:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15576:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15566:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15566:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15566:15:6"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "15407:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15637:144:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15647:24:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15669:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint16",
                      "nodeType": "YulIdentifier",
                      "src": "15652:16:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15652:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "15647:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15680:24:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15702:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint16",
                      "nodeType": "YulIdentifier",
                      "src": "15685:16:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15685:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "15680:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15726:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15728:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15728:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15728:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15720:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15723:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15717:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15717:8:6"
                  },
                  "nodeType": "YulIf",
                  "src": "15714:34:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15758:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "15770:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "15773:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15766:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15766:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "15758:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "15623:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "15626:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "15632:4:6",
                "type": ""
              }
            ],
            "src": "15593:188:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15815:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15832:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15835:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15825:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15825:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15825:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15929:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15932:4:6",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15922:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15922:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15922:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15953:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15956:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "15946:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15946:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15946:15:6"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "15787:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16001:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16018:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16021:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16011:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16011:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16011:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16115:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16118:4:6",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16108:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16108:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16108:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16139:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16142:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "16132:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16132:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16132:15:6"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "15973:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16202:190:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16212:33:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16239:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16221:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16221:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "16212:5:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16335:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16337:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16337:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16337:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16260:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16267:66:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "16257:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16257:77:6"
                  },
                  "nodeType": "YulIf",
                  "src": "16254:103:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16366:20:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "16377:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16384:1:6",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16373:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16373:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "16366:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "16188:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "16198:3:6",
                "type": ""
              }
            ],
            "src": "16159:233:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16441:199:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16451:24:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16473:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint16",
                      "nodeType": "YulIdentifier",
                      "src": "16456:16:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16456:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16451:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16484:24:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16506:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint16",
                      "nodeType": "YulIdentifier",
                      "src": "16489:16:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16489:19:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16484:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16586:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16588:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16588:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16588:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16567:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16574:6:6",
                            "type": "",
                            "value": "0xffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "16582:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16570:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16570:14:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "16564:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16564:21:6"
                  },
                  "nodeType": "YulIf",
                  "src": "16561:47:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16618:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16629:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16632:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16625:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16625:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "16618:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint16",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16428:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16431:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "16437:3:6",
                "type": ""
              }
            ],
            "src": "16398:242:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16691:146:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16701:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16724:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16706:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16706:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16701:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16735:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16758:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16740:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16740:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16735:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16782:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16784:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16784:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16784:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16776:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16779:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "16773:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16773:8:6"
                  },
                  "nodeType": "YulIf",
                  "src": "16770:34:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16814:17:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16826:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16829:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "16822:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16822:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "16814:4:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16677:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16680:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "16686:4:6",
                "type": ""
              }
            ],
            "src": "16646:191:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16887:261:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16897:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16920:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16902:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16902:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16897:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16931:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16954:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16936:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16936:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16931:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17094:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17096:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17096:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17096:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17015:1:6"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17022:66:6",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "17090:1:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17018:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17018:74:6"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "17012:2:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17012:81:6"
                  },
                  "nodeType": "YulIf",
                  "src": "17009:107:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17126:16:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17137:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17140:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17133:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17133:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "17126:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16874:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16877:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "16883:3:6",
                "type": ""
              }
            ],
            "src": "16843:305:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17201:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17211:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "17222:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "17211:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17183:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "17193:7:6",
                "type": ""
              }
            ],
            "src": "17154:79:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17322:74:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17339:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17382:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "17364:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17364:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "17344:19:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17344:45:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17332:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17332:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17332:58:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17310:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17317:3:6",
                "type": ""
              }
            ],
            "src": "17239:157:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17444:52:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17454:35:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17479:2:6",
                        "type": "",
                        "value": "96"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17483:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "17475:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17475:14:6"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "17454:8:6"
                    }
                  ]
                }
              ]
            },
            "name": "shift_left_96",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17425:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "17435:8:6",
                "type": ""
              }
            ],
            "src": "17402:94:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17549:47:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17559:31:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17584:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "shift_left_96",
                      "nodeType": "YulIdentifier",
                      "src": "17570:13:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17570:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "17559:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17531:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "17541:7:6",
                "type": ""
              }
            ],
            "src": "17502:94:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17649:53:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17659:37:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "17690:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "leftAlign_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "17670:19:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17670:26:6"
                  },
                  "variableNames": [
                    {
                      "name": "aligned",
                      "nodeType": "YulIdentifier",
                      "src": "17659:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "leftAlign_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17631:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "aligned",
                "nodeType": "YulTypedName",
                "src": "17641:7:6",
                "type": ""
              }
            ],
            "src": "17602:100:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17791:74:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17808:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17851:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "17833:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17833:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "leftAlign_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "17813:19:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17813:45:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17801:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17801:58:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17801:58:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "17779:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "17786:3:6",
                "type": ""
              }
            ],
            "src": "17708:157:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18043:366:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "18116:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18125:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18054:61:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18054:75:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18054:75:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18138:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18149:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18154:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18145:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18145:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18138:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "18229:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18238:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18167:61:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18167:75:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18167:75:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18251:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18262:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18267:2:6",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18258:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18258:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18251:3:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "18342:6:6"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18351:3:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18280:61:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18280:75:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18280:75:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18364:19:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "18375:3:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18380:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18371:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18371:12:6"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18364:3:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18393:10:6",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "18400:3:6"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "18393:3:6"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18006:3:6",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "18012:6:6",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "18020:6:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "18028:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18039:3:6",
                "type": ""
              }
            ],
            "src": "17871:538:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18443:152:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18460:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18463:77:6",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18453:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18453:88:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18453:88:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18557:1:6",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18560:4:6",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18550:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18550:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18550:15:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18581:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18584:4:6",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18574:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18574:15:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18574:15:6"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "18415:180:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18635:142:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18645:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18668:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18650:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18650:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18645:1:6"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18679:25:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18702:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18684:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18684:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18679:1:6"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18726:22:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "18728:16:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18728:18:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18728:18:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18723:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "18716:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18716:9:6"
                  },
                  "nodeType": "YulIf",
                  "src": "18713:35:6"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18757:14:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18766:1:6"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18769:1:6"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "18762:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18762:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "18757:1:6"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18624:1:6",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18627:1:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "18633:1:6",
                "type": ""
              }
            ],
            "src": "18601:176:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint16t_uint16t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16_t_bool_t_bool_t_address_t_address__to_t_uint16_t_uint16_t_uint16_t_uint16_t_bool_t_bool_t_address_t_address__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_address_to_t_address_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_address_to_t_address_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16_t_address__to_t_uint16_t_uint16_t_uint16_t_uint16_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_uint16t_uint16(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint16_to_t_uint16(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct initializeGame.Player -> struct initializeGame.Player\n    function abi_encode_t_struct$_Player_$59_memory_ptr_to_t_struct$_Player_$59_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // balance\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // round\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // cardsOwned\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // playerNumber\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // playerAddr\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Player_$59_memory_ptr__to_t_struct$_Player_$59_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_Player_$59_memory_ptr_to_t_struct$_Player_$59_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct tradeGame.tradeCard -> struct tradeGame.tradeCard\n    function abi_encode_t_struct$_tradeCard_$860_memory_ptr_to_t_struct$_tradeCard_$860_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // ownerOffer\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // ownerCard\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // buyerOffer\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // buyerCard\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint16_to_t_uint16(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tradeComplete\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // tradeAvailable\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // ownerAddr\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // buyerAddr\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_tradeCard_$860_memory_ptr_to_t_struct$_tradeCard_$860_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_tradeCard_$860_memory_ptr_to_t_struct$_tradeCard_$860_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x0100)\n    }\n\n    function array_nextElement_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct tradeGame.tradeCard[] -> struct tradeGame.tradeCard[]\n    function abi_encode_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_tradeCard_$860_memory_ptr_to_t_struct$_tradeCard_$860_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint16(x, y) -> diff {\n        x := cleanup_t_uint16(x)\n        y := cleanup_t_uint16(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint16(x, y) -> sum {\n        x := cleanup_t_uint16(x)\n        y := cleanup_t_uint16(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "305:4505:5:-:0;;;430:1:1;401:30;;;;;;;;;;;;;;;;;;;;468:1;438:31;;500:5;476:29;;;;;;;;;;;;;;;;;;;;649:5;619:35;;534:1:3;504:31;;575:1;542:34;;649:2;622:29;;;;;;;;;;;;;;;;;;;;693:1;658:37;;;;;;;;;;;;;;;;;;;;728:1;704:25;;305:4505:5;;;;;;;;;;1732:10:1;1716:5;;:27;;;;;;;;;;;;;;;;;;1769:1;1754:12;;:16;;;;;;;;;;;;;;;;;;305:4505:5;;;;;;",
  "deployedSourceMap": "305:4505:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3351:261:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2319:746:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1751:95:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1642:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:25:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;619:35:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1854:410:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1307:47:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;1918:502;;;:::i;:::-;;1306:92:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2334:716;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1916:284:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2816:527:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;438:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1056:611:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1786:83:1;;;:::i;:::-;;1406:110:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;504:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;661:28:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1225:22;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1811:97:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3182:1625;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1524:110:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1675:128:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3121:320:3;;;:::i;:::-;;476:29:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;622::3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;542:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;658:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:49:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;401:30:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1254:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3351:261;3409:4;3504:1;3471:35;;:11;:21;3483:8;3471:21;;;;;;;;;;;;;;;;;;;;;:35;;;3467:116;;3566:5;3559:12;;;;3467:116;3600:4;3593:11;;3351:261;;;;:::o;2319:746:5:-;2495:11;2458:48;;:13;:25;2472:10;2458:25;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:48;;;;2450:57;;;;;;2589:12;:24;2602:10;2589:24;;;;;;;;;;;;;;;:39;;;;;;;;;;;;2581:48;;;;;;2663:1;2648:11;:16;;;;2640:25;;;;;;2716:11;2678:12;:24;2691:10;2678:24;;;;;;;;;;;;;;;:35;;;:49;;;;;;;;;;;;;;;;;;2775:10;2738:12;:24;2751:10;2738:24;;;;;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;2841:10;2796:12;:24;2809:10;2796:24;;;;;;;;;;;;;;;:34;;;:56;;;;;;;;;;;;;;;;;;2905:5;2863:12;:24;2876:10;2863:24;;;;;;;;;;;;;;;:39;;;:47;;;;;;;;;;;;;;;;;;2960:11;2923:13;:25;2937:10;2923:25;;;;;;;;;;;;;;;:33;;;:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3055:1;3021:11;:23;3033:10;3021:23;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;2319:746;;;:::o;1751:95:3:-;1799:7;1826:12;;1819:19;;1751:95;:::o;1642:101::-;1693:7;1720:15;;1713:22;;1642:101;:::o;811:25:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;619:35:1:-;;;;:::o;1854:410:3:-;1901:16;1930:23;1970:11;:9;:11::i;:::-;:22;;;1956:37;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1930:63;;2004:15;2039:9;2034:199;2058:5;:12;;;;2054:1;:16;2034:199;;;2121:10;2096:35;;:11;:21;2108:5;2114:1;2108:8;;;;;;;;:::i;:::-;;;;;;;;;;2096:21;;;;;;;;;;;;;;;;;;;;;:35;;;2092:130;;;2170:5;2176:1;2170:8;;;;;;;;:::i;:::-;;;;;;;;;;2152:6;2159:7;2152:15;;;;;;;;:::i;:::-;;;;;;;:26;;;;;2197:9;;;;;:::i;:::-;;;;2092:130;2072:3;;;;;:::i;:::-;;;;2034:199;;;;2250:6;2243:13;;;;1854:410;:::o;1307:47:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1918:502::-;1981:5;1968:18;;:9;;;;;;;;;;;:18;;;1960:27;;;;;;2054:1;2006:50;;:13;:25;2020:10;2006:25;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:50;;;1998:59;;;;;;2084:1;2068:12;;:17;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2153:128;;;;;;;;2174:3;2153:128;;;;;;2192:1;2153:128;;;;;;2208:1;2153:128;;;;;;2224:12;;;;;;;;;;2153:128;;;;;;2259:10;2153:128;;;;;2125:13;:25;2139:10;2125:25;;;;;;;;;;;;;;;:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2350:9;2345:68;2369:1;2365;:5;2345:68;;;2392:9;:7;:9::i;:::-;2372:3;;;;;:::i;:::-;;;;2345:68;;;;1918:502::o;1306:92:3:-;1347:16;1384:5;1376:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1306:92;:::o;2334:716::-;2381:7;2401:28;2446:11;:9;:11::i;:::-;:22;;;2432:37;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2401:68;;2494:16;:14;:16::i;:::-;2480:30;;2521:18;2559:9;2554:461;2578:11;:18;2574:1;:22;2554:461;;;2639:4;2622:11;2634:1;2622:14;;;;;;;;:::i;:::-;;;;;;;;:21;2618:386;;;2678:2;2664:16;;;;;:::i;:::-;;;2618:386;;;2723:4;2706:11;2718:1;2706:14;;;;;;;;:::i;:::-;;;;;;;;:21;2702:302;;;2762:1;2748:15;;;;;:::i;:::-;;;2702:302;;;2806:4;2789:11;2801:1;2789:14;;;;;;;;:::i;:::-;;;;;;;;:21;2785:219;;;2845:2;2831:16;;;;;:::i;:::-;;;2785:219;;;2890:4;2873:11;2885:1;2873:14;;;;;;;;:::i;:::-;;;;;;;;:21;2869:135;;;2929:2;2915:16;;;;;:::i;:::-;;;2869:135;;;2986:2;2972:16;;;;;:::i;:::-;;;2869:135;2785:219;2702:302;2618:386;2598:3;;;;;:::i;:::-;;;;2554:461;;;;3032:10;3025:17;;;;2334:716;:::o;1916:284:5:-;1962:7;1982:13;1998:1;1982:17;;2023:1;2015:9;;2010:164;2034:6;:13;;;;2026:5;:21;2010:164;;;2104:10;2077:37;;:6;2084:5;2077:13;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;;;;;;;;;;;:37;;;2073:90;;;2142:5;2135:12;;;;;2073:90;2049:7;;;;;:::i;:::-;;;;2010:164;;;2184:8;;;1916:284;;:::o;2816:527:1:-;2878:7;2898:396;2905:4;2898:396;;;2926:15;3098:13;3019:15;3036:10;3048:12;;3002:59;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2970:110;;;;;;2944:151;;:167;;;;:::i;:::-;2926:185;;3196:4;3174:26;;:18;3184:7;3174:9;:18::i;:::-;:26;;;3170:81;;;3228:7;3221:14;;;;;3170:81;3281:1;3265:12;;:17;;;;;;;:::i;:::-;;;;;;;;2911:383;2898:396;;;3322:13;3311:8;:24;;;;:::i;:::-;3304:31;;2816:527;;;;:::o;438:31::-;;;;:::o;1056:611:5:-;1178:11;1141:48;;:13;:25;1155:10;1141:25;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:48;;;;1133:57;;;;;;1228:192;;;;;;;;1252:11;1228:192;;;;;;1278:10;1228:192;;;;;;1303:1;1228:192;;;;;;1319:1;1228:192;;;;;;1335:5;1228:192;;;;;;1355:4;1228:192;;;;;;1374:10;1228:192;;;;;;1407:1;1228:192;;;;;1201:12;:24;1214:10;1201:24;;;;;;;;;;;;;;;:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1431:6;1443:12;:24;1456:10;1443:24;;;;;;;;;;;;;;;1431:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:1;1479:11;:23;1491:10;1479:23;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;1619:11;1582:13;:25;1596:10;1582:25;;;;;;;;;;;;;;;:33;;;:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1658:1;1641:13;;:18;;;;;;;:::i;:::-;;;;;;;;1056:611;;:::o;1786:83:1:-;1598:5;;;;;;;;;;;1584:19;;:10;:19;;;1576:28;;;;;;1857:4:::1;1845:9;;:16;;;;;;;;;;;;;;;;;;1786:83::o:0;1406:110:3:-;1448:13;;:::i;:::-;1482;:25;1496:10;1482:25;;;;;;;;;;;;;;;1474:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1406:110;:::o;504:31::-;;;;:::o;661:28:1:-;;;;;;;;;;;;;:::o;1225:22::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1811:97:5:-;1856:18;1894:6;1887:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:97;:::o;3182:1625::-;3265:12;:24;3278:10;3265:24;;;;;;;;;;;;;;;:34;;;;;;;;;;;;3251:48;;:10;:48;;;3243:57;;;;;;3362:5;3319:48;;:12;:24;3332:10;3319:24;;;;;;;;;;;;;;;:39;;;;;;;;;;;;:48;;;3311:57;;;;;;3402:5;3385:22;;:13;:22;;;3381:647;;;3568:12;:24;3581:10;3568:24;;;;;;;;;;;;;;;:35;;;;;;;;;;;;3489:13;:49;3503:12;:24;3516:10;3503:24;;;;;;;;;;;;;;;:34;;;;;;;;;;;;3489:49;;;;;;;;;;;;;;;:75;;;:114;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3718:12;:56;3749:10;3718:56;;;;;;;;;;;;;;;:66;;;;;;;;;;;;3668:11;:47;3680:12;:24;3693:10;3680:24;;;;;;;;;;;;;;;:34;;;;;;;;;;;;3668:47;;;;;;;;;;;;;;:116;;;;;;;;;;;;;;;;;;3839:1;3801:12;:24;3814:10;3801:24;;;;;;;;;;;;;;;:35;;;:39;;;;;;;;;;;;;;;;;;3892:1;3855:12;:24;3868:10;3855:24;;;;;;;;;;;;;;;:34;;;:38;;;;;;;;;;;;;;;;;;3953:1;3908:12;:24;3921:10;3908:24;;;;;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;4012:4;3970:12;:24;3983:10;3970:24;;;;;;;;;;;;;;;:39;;;:46;;;;;;;;;;;;;;;;;;3381:647;4061:4;4044:21;;:13;:21;;;4040:760;;;4178:12;:24;4191:10;4178:24;;;;;;;;;;;;;;;:53;;;;;;;;;;;;4141:13;:25;4155:10;4141:25;;;;;;;;;;;;;;;:33;;;:90;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4345:10;4295:11;:47;4307:12;:24;4320:10;4307:24;;;;;;;;;;;;;;;:34;;;;;;;;;;;;4295:47;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;4410:1;4372:12;:24;4385:10;4372:24;;;;;;;;;;;;;;;:35;;;:39;;;;;;;;;;;;;;;;;;4463:1;4426:12;:24;4439:10;4426:24;;;;;;;;;;;;;;;:34;;;:38;;;;;;;;;;;;;;;;;;4524:1;4479:12;:24;4492:10;4479:24;;;;;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;4583:4;4541:12;:24;4554:10;4541:24;;;;;;;;;;;;;;;:39;;;:46;;;;;;;;;;;;;;;;;;4604:26;4633:6;4656:1;4640:6;:13;;;;:17;;;;:::i;:::-;4633:25;;;;;;;;:::i;:::-;;;;;;;;;;;;4604:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4680:6;4703:1;4687:6;:13;;;;:17;;;;:::i;:::-;4680:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;4673:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4746:9;4720:6;4727:15;:13;:15::i;:::-;4720:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4787:1;4770:13;;:18;;;;;;;:::i;:::-;;;;;;;;4067:733;4040:760;3182:1625;:::o;1524:110:3:-;1579:7;1607:11;:18;1619:5;1607:18;;;;;;;;;;;;;;;;;;;;;1599:27;;1524:110;;;:::o;1675:128:5:-;1733:4;1757:12;:23;1770:9;1757:23;;;;;;;;;;;;;;;:38;;;;;;;;;;;;1750:45;;1675:128;;;:::o;3121:320:3:-;888:4;875:17;;:9;;;;;;;;;;;:17;;;867:26;;;;;;1030:12:::1;::::0;::::1;;;;;;;;1012:30;;:15;;:30;1004:39;;;::::0;::::1;;1204:12:::2;;1169:13;:25;1183:10;1169:25;;;;;;;;;;;;;;;:31;;;;;;;;;;;;:47;;;;1161:56;;;::::0;::::2;;3242:10:::3;;;;;;;;;;;3205:47;;:13;:25;3219:10;3205:25;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;3197:56;;;::::0;::::3;;3264:9;:7;:9::i;:::-;3321:10;;;;;;;;;;;3284:13;:25;3298:10;3284:25;;;;;;;;;;;;;;;:33;;;:47;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3361:1;3342:15;;:20;;;;;;;:::i;:::-;;;;;;;;3408:1;3373:13;:25;3387:10;3373:25;;;;;;;;;;;;;;;:31;;;:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3420:13;:11;:13::i;:::-;3121:320::o:0;476:29:1:-;;;;;;;;;;;;;:::o;622::3:-;;;;;;;;;;;;;:::o;542:34::-;;;;:::o;658:37::-;;;;;;;;;;;;;:::o;843:49:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;401:30:1:-;;;;;;;;;;;;:::o;1254:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;2453:310::-;2492:16;2511:27;2525:12;;2511:13;:27::i;:::-;2492:46;;2549:5;2560:8;2549:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2648:10;2624:11;:21;2636:8;2624:21;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;2754:1;2714:13;:25;2728:10;2714:25;;;;;;;;;;;;;;;:36;;;:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2481:282;2453:310::o;3514:383:3:-;888:4;875:17;;:9;;;;;;;;;;;:17;;;867:26;;;;;;3593:3:::1;3573:16;:14;:16::i;:::-;:23:::0;;3673:1:::1;3636:13;:25;3650:10;3636:25;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:38;;;3632:170;;3707:1;3691:12;::::0;:17:::1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3742:1;3723:15;;:20;;;;;;;:::i;:::-;;;;;;;;3765:13;:25;3779:10;3765:25;;;;;;;;;;;;;;;;3758:32:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3632:170;3835:12;::::0;::::1;;;;;;;;3816:31;;:15;;:31;3812:78;;;3864:14;:12;:14::i;:::-;3812:78;3514:383::o:0;3905:162::-;888:4;875:17;;:9;;;;;;;;;;;:17;;;867:26;;;;;;3988:12:::1;::::0;::::1;;;;;;;;3969:31;;:15;;:31;;3961:40;;;::::0;::::1;;4030:1;4012:15;:19;;;;4058:1;4042:12;;:17;;;;;;;:::i;:::-;;;;;;;;3905:162::o:0;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o;1452:89::-;1488:7;1528:6;1521:5;1517:18;1506:29;;1452:89;;;:::o;1547:120::-;1619:23;1636:5;1619:23;:::i;:::-;1612:5;1609:34;1599:62;;1657:1;1654;1647:12;1599:62;1547:120;:::o;1673:137::-;1718:5;1756:6;1743:20;1734:29;;1772:32;1798:5;1772:32;:::i;:::-;1673:137;;;;:::o;1816:126::-;1853:7;1893:42;1886:5;1882:54;1871:65;;1816:126;;;:::o;1948:96::-;1985:7;2014:24;2032:5;2014:24;:::i;:::-;2003:35;;1948:96;;;:::o;2050:122::-;2123:24;2141:5;2123:24;:::i;:::-;2116:5;2113:35;2103:63;;2162:1;2159;2152:12;2103:63;2050:122;:::o;2178:139::-;2224:5;2262:6;2249:20;2240:29;;2278:33;2305:5;2278:33;:::i;:::-;2178:139;;;;:::o;2323:615::-;2398:6;2406;2414;2463:2;2451:9;2442:7;2438:23;2434:32;2431:119;;;2469:79;;:::i;:::-;2431:119;2589:1;2614:52;2658:7;2649:6;2638:9;2634:22;2614:52;:::i;:::-;2604:62;;2560:116;2715:2;2741:52;2785:7;2776:6;2765:9;2761:22;2741:52;:::i;:::-;2731:62;;2686:117;2842:2;2868:53;2913:7;2904:6;2893:9;2889:22;2868:53;:::i;:::-;2858:63;;2813:118;2323:615;;;;;:::o;2944:118::-;3031:24;3049:5;3031:24;:::i;:::-;3026:3;3019:37;2944:118;;:::o;3068:222::-;3161:4;3199:2;3188:9;3184:18;3176:26;;3212:71;3280:1;3269:9;3265:17;3256:6;3212:71;:::i;:::-;3068:222;;;;:::o;3296:115::-;3381:23;3398:5;3381:23;:::i;:::-;3376:3;3369:36;3296:115;;:::o;3417:118::-;3504:24;3522:5;3504:24;:::i;:::-;3499:3;3492:37;3417:118;;:::o;3541:957::-;3810:4;3848:3;3837:9;3833:19;3825:27;;3862:69;3928:1;3917:9;3913:17;3904:6;3862:69;:::i;:::-;3941:70;4007:2;3996:9;3992:18;3983:6;3941:70;:::i;:::-;4021;4087:2;4076:9;4072:18;4063:6;4021:70;:::i;:::-;4101;4167:2;4156:9;4152:18;4143:6;4101:70;:::i;:::-;4181:67;4243:3;4232:9;4228:19;4219:6;4181:67;:::i;:::-;4258;4320:3;4309:9;4305:19;4296:6;4258:67;:::i;:::-;4335:73;4403:3;4392:9;4388:19;4379:6;4335:73;:::i;:::-;4418;4486:3;4475:9;4471:19;4462:6;4418:73;:::i;:::-;3541:957;;;;;;;;;;;:::o;4504:114::-;4571:6;4605:5;4599:12;4589:22;;4504:114;;;:::o;4624:184::-;4723:11;4757:6;4752:3;4745:19;4797:4;4792:3;4788:14;4773:29;;4624:184;;;;:::o;4814:132::-;4881:4;4904:3;4896:11;;4934:4;4929:3;4925:14;4917:22;;4814:132;;;:::o;4952:108::-;5029:24;5047:5;5029:24;:::i;:::-;5024:3;5017:37;4952:108;;:::o;5066:179::-;5135:10;5156:46;5198:3;5190:6;5156:46;:::i;:::-;5234:4;5229:3;5225:14;5211:28;;5066:179;;;;:::o;5251:113::-;5321:4;5353;5348:3;5344:14;5336:22;;5251:113;;;:::o;5400:732::-;5519:3;5548:54;5596:5;5548:54;:::i;:::-;5618:86;5697:6;5692:3;5618:86;:::i;:::-;5611:93;;5728:56;5778:5;5728:56;:::i;:::-;5807:7;5838:1;5823:284;5848:6;5845:1;5842:13;5823:284;;;5924:6;5918:13;5951:63;6010:3;5995:13;5951:63;:::i;:::-;5944:70;;6037:60;6090:6;6037:60;:::i;:::-;6027:70;;5883:224;5870:1;5867;5863:9;5858:14;;5823:284;;;5827:14;6123:3;6116:10;;5524:608;;;5400:732;;;;:::o;6138:373::-;6281:4;6319:2;6308:9;6304:18;6296:26;;6368:9;6362:4;6358:20;6354:1;6343:9;6339:17;6332:47;6396:108;6499:4;6490:6;6396:108;:::i;:::-;6388:116;;6138:373;;;;:::o;6517:329::-;6576:6;6625:2;6613:9;6604:7;6600:23;6596:32;6593:119;;;6631:79;;:::i;:::-;6593:119;6751:1;6776:53;6821:7;6812:6;6801:9;6797:22;6776:53;:::i;:::-;6766:63;;6722:117;6517:329;;;;:::o;6852:648::-;7049:4;7087:3;7076:9;7072:19;7064:27;;7101:69;7167:1;7156:9;7152:17;7143:6;7101:69;:::i;:::-;7180:70;7246:2;7235:9;7231:18;7222:6;7180:70;:::i;:::-;7260;7326:2;7315:9;7311:18;7302:6;7260:70;:::i;:::-;7340;7406:2;7395:9;7391:18;7382:6;7340:70;:::i;:::-;7420:73;7488:3;7477:9;7473:19;7464:6;7420:73;:::i;:::-;6852:648;;;;;;;;:::o;7506:470::-;7572:6;7580;7629:2;7617:9;7608:7;7604:23;7600:32;7597:119;;;7635:79;;:::i;:::-;7597:119;7755:1;7780:52;7824:7;7815:6;7804:9;7800:22;7780:52;:::i;:::-;7770:62;;7726:116;7881:2;7907:52;7951:7;7942:6;7931:9;7927:22;7907:52;:::i;:::-;7897:62;;7852:117;7506:470;;;;;:::o;7982:105::-;8057:23;8074:5;8057:23;:::i;:::-;8052:3;8045:36;7982:105;;:::o;8093:108::-;8170:24;8188:5;8170:24;:::i;:::-;8165:3;8158:37;8093:108;;:::o;8275:1039::-;8416:4;8411:3;8407:14;8506:4;8499:5;8495:16;8489:23;8525:61;8580:4;8575:3;8571:14;8557:12;8525:61;:::i;:::-;8431:165;8679:4;8672:5;8668:16;8662:23;8698:61;8753:4;8748:3;8744:14;8730:12;8698:61;:::i;:::-;8606:163;8857:4;8850:5;8846:16;8840:23;8876:61;8931:4;8926:3;8922:14;8908:12;8876:61;:::i;:::-;8779:168;9037:4;9030:5;9026:16;9020:23;9056:61;9111:4;9106:3;9102:14;9088:12;9056:61;:::i;:::-;8957:170;9215:4;9208:5;9204:16;9198:23;9234:63;9291:4;9286:3;9282:14;9268:12;9234:63;:::i;:::-;9137:170;8385:929;8275:1039;;:::o;9320:311::-;9457:4;9495:3;9484:9;9480:19;9472:27;;9509:115;9621:1;9610:9;9606:17;9597:6;9509:115;:::i;:::-;9320:311;;;;:::o;9637:104::-;9682:7;9711:24;9729:5;9711:24;:::i;:::-;9700:35;;9637:104;;;:::o;9747:142::-;9850:32;9876:5;9850:32;:::i;:::-;9845:3;9838:45;9747:142;;:::o;9895:254::-;10004:4;10042:2;10031:9;10027:18;10019:26;;10055:87;10139:1;10128:9;10124:17;10115:6;10055:87;:::i;:::-;9895:254;;;;:::o;10155:140::-;10248:6;10282:5;10276:12;10266:22;;10155:140;;;:::o;10301:210::-;10426:11;10460:6;10455:3;10448:19;10500:4;10495:3;10491:14;10476:29;;10301:210;;;;:::o;10517:158::-;10610:4;10633:3;10625:11;;10663:4;10658:3;10654:14;10646:22;;10517:158;;;:::o;10681:99::-;10752:21;10767:5;10752:21;:::i;:::-;10747:3;10740:34;10681:99;;:::o;10850:1576::-;10989:6;10984:3;10980:16;11084:4;11077:5;11073:16;11067:23;11103:61;11158:4;11153:3;11149:14;11135:12;11103:61;:::i;:::-;11006:168;11261:4;11254:5;11250:16;11244:23;11280:61;11335:4;11330:3;11326:14;11312:12;11280:61;:::i;:::-;11184:167;11439:4;11432:5;11428:16;11422:23;11458:61;11513:4;11508:3;11504:14;11490:12;11458:61;:::i;:::-;11361:168;11616:4;11609:5;11605:16;11599:23;11635:61;11690:4;11685:3;11681:14;11667:12;11635:61;:::i;:::-;11539:167;11797:4;11790:5;11786:16;11780:23;11816:57;11867:4;11862:3;11858:14;11844:12;11816:57;:::i;:::-;11716:167;11975:4;11968:5;11964:16;11958:23;11994:57;12045:4;12040:3;12036:14;12022:12;11994:57;:::i;:::-;11893:168;12148:4;12141:5;12137:16;12131:23;12167:63;12224:4;12219:3;12215:14;12201:12;12167:63;:::i;:::-;12071:169;12327:4;12320:5;12316:16;12310:23;12346:63;12403:4;12398:3;12394:14;12380:12;12346:63;:::i;:::-;12250:169;10958:1468;10850:1576;;:::o;12432:285::-;12553:10;12574:98;12668:3;12660:6;12574:98;:::i;:::-;12704:6;12699:3;12695:16;12681:30;;12432:285;;;;:::o;12723:139::-;12819:4;12851;12846:3;12842:14;12834:22;;12723:139;;;:::o;12936:940::-;13107:3;13136:80;13210:5;13136:80;:::i;:::-;13232:112;13337:6;13332:3;13232:112;:::i;:::-;13225:119;;13368:82;13444:5;13368:82;:::i;:::-;13473:7;13504:1;13489:362;13514:6;13511:1;13508:13;13489:362;;;13590:6;13584:13;13617:115;13728:3;13713:13;13617:115;:::i;:::-;13610:122;;13755:86;13834:6;13755:86;:::i;:::-;13745:96;;13549:302;13536:1;13533;13529:9;13524:14;;13489:362;;;13493:14;13867:3;13860:10;;13112:764;;;12936:940;;;;:::o;13882:477::-;14077:4;14115:2;14104:9;14100:18;14092:26;;14164:9;14158:4;14154:20;14150:1;14139:9;14135:17;14128:47;14192:160;14347:4;14338:6;14192:160;:::i;:::-;14184:168;;13882:477;;;;:::o;14365:116::-;14435:21;14450:5;14435:21;:::i;:::-;14428:5;14425:32;14415:60;;14471:1;14468;14461:12;14415:60;14365:116;:::o;14487:133::-;14530:5;14568:6;14555:20;14546:29;;14584:30;14608:5;14584:30;:::i;:::-;14487:133;;;;:::o;14626:323::-;14682:6;14731:2;14719:9;14710:7;14706:23;14702:32;14699:119;;;14737:79;;:::i;:::-;14699:119;14857:1;14882:50;14924:7;14915:6;14904:9;14900:22;14882:50;:::i;:::-;14872:60;;14828:114;14626:323;;;;:::o;14955:222::-;15048:4;15086:2;15075:9;15071:18;15063:26;;15099:71;15167:1;15156:9;15152:17;15143:6;15099:71;:::i;:::-;14955:222;;;;:::o;15183:218::-;15274:4;15312:2;15301:9;15297:18;15289:26;;15325:69;15391:1;15380:9;15376:17;15367:6;15325:69;:::i;:::-;15183:218;;;;:::o;15407:180::-;15455:77;15452:1;15445:88;15552:4;15549:1;15542:15;15576:4;15573:1;15566:15;15593:188;15632:4;15652:19;15669:1;15652:19;:::i;:::-;15647:24;;15685:19;15702:1;15685:19;:::i;:::-;15680:24;;15723:1;15720;15717:8;15714:34;;;15728:18;;:::i;:::-;15714:34;15773:1;15770;15766:9;15758:17;;15593:188;;;;:::o;15787:180::-;15835:77;15832:1;15825:88;15932:4;15929:1;15922:15;15956:4;15953:1;15946:15;15973:180;16021:77;16018:1;16011:88;16118:4;16115:1;16108:15;16142:4;16139:1;16132:15;16159:233;16198:3;16221:24;16239:5;16221:24;:::i;:::-;16212:33;;16267:66;16260:5;16257:77;16254:103;;;16337:18;;:::i;:::-;16254:103;16384:1;16377:5;16373:13;16366:20;;16159:233;;;:::o;16398:242::-;16437:3;16456:19;16473:1;16456:19;:::i;:::-;16451:24;;16489:19;16506:1;16489:19;:::i;:::-;16484:24;;16582:1;16574:6;16570:14;16567:1;16564:21;16561:47;;;16588:18;;:::i;:::-;16561:47;16632:1;16629;16625:9;16618:16;;16398:242;;;;:::o;16646:191::-;16686:4;16706:20;16724:1;16706:20;:::i;:::-;16701:25;;16740:20;16758:1;16740:20;:::i;:::-;16735:25;;16779:1;16776;16773:8;16770:34;;;16784:18;;:::i;:::-;16770:34;16829:1;16826;16822:9;16814:17;;16646:191;;;;:::o;16843:305::-;16883:3;16902:20;16920:1;16902:20;:::i;:::-;16897:25;;16936:20;16954:1;16936:20;:::i;:::-;16931:25;;17090:1;17022:66;17018:74;17015:1;17012:81;17009:107;;;17096:18;;:::i;:::-;17009:107;17140:1;17137;17133:9;17126:16;;16843:305;;;;:::o;17154:79::-;17193:7;17222:5;17211:16;;17154:79;;;:::o;17239:157::-;17344:45;17364:24;17382:5;17364:24;:::i;:::-;17344:45;:::i;:::-;17339:3;17332:58;17239:157;;:::o;17402:94::-;17435:8;17483:5;17479:2;17475:14;17454:35;;17402:94;;;:::o;17502:::-;17541:7;17570:20;17584:5;17570:20;:::i;:::-;17559:31;;17502:94;;;:::o;17602:100::-;17641:7;17670:26;17690:5;17670:26;:::i;:::-;17659:37;;17602:100;;;:::o;17708:157::-;17813:45;17833:24;17851:5;17833:24;:::i;:::-;17813:45;:::i;:::-;17808:3;17801:58;17708:157;;:::o;17871:538::-;18039:3;18054:75;18125:3;18116:6;18054:75;:::i;:::-;18154:2;18149:3;18145:12;18138:19;;18167:75;18238:3;18229:6;18167:75;:::i;:::-;18267:2;18262:3;18258:12;18251:19;;18280:75;18351:3;18342:6;18280:75;:::i;:::-;18380:2;18375:3;18371:12;18364:19;;18400:3;18393:10;;17871:538;;;;;;:::o;18415:180::-;18463:77;18460:1;18453:88;18560:4;18557:1;18550:15;18584:4;18581:1;18574:15;18601:176;18633:1;18650:20;18668:1;18650:20;:::i;:::-;18645:25;;18684:20;18702:1;18684:20;:::i;:::-;18679:25;;18723:1;18713:35;;18728:18;;:::i;:::-;18713:35;18769:1;18766;18762:9;18757:14;;18601:176;;;;:::o",
  "source": "pragma solidity >=0.6.0;\r\n\r\nimport \"./roundsGame.sol\";\r\n\r\n/*==================================================================\r\nContains\r\n-Trade Functionality\r\n-Offer Trades\r\n-Cancel Trades\r\n-Subtract and add token/cards per trades\r\n==================================================================*/\r\n\r\ncontract tradeGame is roundsGame {\r\n    //--------------------Variables----------------------\r\n\r\n    struct tradeCard {\r\n        uint16 ownerOffer; //Owner giving tokens to take his card. (for negative ones usually)\r\n        uint16 ownerCard; //Owners card he wants to trade.\r\n        uint16 buyerOffer; //Buyer giving tokens to buy card\r\n        uint16 buyerCard; //BuyerCard\r\n        bool tradeComplete;\r\n        bool tradeAvailable;\r\n        address ownerAddr;\r\n        address buyerAddr;\r\n    }\r\n\r\n    tradeCard[] public trades;\r\n    mapping(address => tradeCard) public ownerToTrade;\r\n\r\n    //--------------------Functions----------------------\r\n\r\n    //MAKE SURE TO DOUBLE CHECK THAT ALL THE TOKENS CARDS ETC TRANSFERS ARE DONE CORRECTLY\r\n\r\n    function startTrade(uint16 _ownerOffer, uint16 _ownerCard) public {\r\n        require(ownerToPlayer[msg.sender].balance >= _ownerOffer);\r\n        ownerToTrade[msg.sender] = tradeCard(\r\n            _ownerOffer,\r\n            _ownerCard,\r\n            0,\r\n            0,\r\n            false,\r\n            true,\r\n            msg.sender,\r\n            address(0)\r\n        );\r\n        trades.push(ownerToTrade[msg.sender]);\r\n        cardToOwner[_ownerCard] = address(0);\r\n        //reduce the tokens the owner offers for trade\r\n        ownerToPlayer[msg.sender].balance -= _ownerOffer;\r\n        currentTrades += 1;\r\n    }\r\n\r\n    function retTrade(address ownerAddr) public view returns (bool) {\r\n        return ownerToTrade[ownerAddr].tradeAvailable;\r\n    }\r\n\r\n    function retAllTrades() public view returns (tradeCard[] memory) {\r\n        return trades;\r\n    }\r\n\r\n    function retTradeIndex() public view returns (uint256) {\r\n        uint256 index = 0;\r\n        for (index = 0; index < trades.length; index++) {\r\n            if (trades[index].ownerAddr == msg.sender) {\r\n                return index;\r\n            }\r\n        }\r\n        revert();\r\n    }\r\n\r\n    //The offer (tokens + cards) a buyer makes will be subtracted until the trade is cancelled or confirmed\r\n\r\n    function offerTrade(\r\n        uint16 _buyerOffer,\r\n        uint16 _buyerCard,\r\n        address _ownerAddr\r\n    ) public {\r\n        require(ownerToPlayer[msg.sender].balance >= _buyerOffer);\r\n        //to make sure no more trades available to the player\r\n        require(ownerToTrade[_ownerAddr].tradeAvailable);\r\n        require(_buyerOffer >= 0);\r\n\r\n        ownerToTrade[_ownerAddr].buyerOffer = _buyerOffer;\r\n        ownerToTrade[_ownerAddr].buyerCard = _buyerCard;\r\n        ownerToTrade[_ownerAddr].buyerAddr = address(msg.sender);\r\n        ownerToTrade[_ownerAddr].tradeAvailable = false;\r\n\r\n        ownerToPlayer[msg.sender].balance -= _buyerOffer;\r\n        //buyers Card owned by noOne;\r\n        cardToOwner[_buyerCard] = address(0);\r\n    }\r\n\r\n    //Player can use this to hold enemy tokens but in term they cant trade either until they confirm this\r\n\r\n    function tradeComplete(bool _tradeConfirm) public {\r\n        require(msg.sender == ownerToTrade[msg.sender].ownerAddr);\r\n        require(ownerToTrade[msg.sender].tradeAvailable == false);\r\n\r\n        if (_tradeConfirm == false) {\r\n            //send money back to buyer and make trade available\r\n            ownerToPlayer[ownerToTrade[msg.sender].ownerAddr]\r\n                .balance += ownerToTrade[msg.sender].buyerOffer;\r\n            //make buyer Owner of his card again\r\n            cardToOwner[ownerToTrade[msg.sender].buyerCard] = ownerToTrade[\r\n                msg.sender\r\n            ].buyerAddr;\r\n\r\n            ownerToTrade[msg.sender].buyerOffer = 0;\r\n            ownerToTrade[msg.sender].buyerCard = 0;\r\n            ownerToTrade[msg.sender].buyerAddr = address(0);\r\n            ownerToTrade[msg.sender].tradeAvailable = true;\r\n        }\r\n\r\n        if (_tradeConfirm == true) {\r\n            //send money to owner and make trade complete\r\n            ownerToPlayer[msg.sender].balance += ownerToTrade[msg.sender]\r\n                .buyerOffer;\r\n            //make tradeOwner Owner of the card\r\n            cardToOwner[ownerToTrade[msg.sender].buyerCard] = msg.sender;\r\n\r\n            ownerToTrade[msg.sender].buyerOffer = 0;\r\n            ownerToTrade[msg.sender].buyerCard = 0;\r\n            ownerToTrade[msg.sender].buyerAddr = address(0);\r\n            ownerToTrade[msg.sender].tradeAvailable = true;\r\n\r\n            tradeCard memory tempTrade = trades[trades.length - 1];\r\n            delete trades[trades.length - 1];\r\n            trades[retTradeIndex()] = tempTrade;\r\n            currentTrades -= 1;\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "E:\\ProgrammingStuff\\BlockChain\\truffle\\Projects\\FastCards\\truffle\\contracts\\tradeGame.sol",
  "ast": {
    "absolutePath": "project:/contracts/tradeGame.sol",
    "exportedSymbols": {
      "initializeGame": [
        267
      ],
      "roundsGame": [
        644
      ],
      "tradeGame": [
        1268
      ]
    },
    "id": 1269,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 840,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "project:/contracts/roundsGame.sol",
        "file": "./roundsGame.sol",
        "id": 841,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1269,
        "sourceUnit": 645,
        "src": "28:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 842,
              "name": "roundsGame",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 644,
              "src": "327:10:5"
            },
            "id": 843,
            "nodeType": "InheritanceSpecifier",
            "src": "327:10:5"
          }
        ],
        "canonicalName": "tradeGame",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1268,
        "linearizedBaseContracts": [
          1268,
          644,
          267
        ],
        "name": "tradeGame",
        "nameLocation": "314:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "tradeGame.tradeCard",
            "id": 860,
            "members": [
              {
                "constant": false,
                "id": 845,
                "mutability": "mutable",
                "name": "ownerOffer",
                "nameLocation": "441:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "434:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 844,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "434:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 847,
                "mutability": "mutable",
                "name": "ownerCard",
                "nameLocation": "537:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "530:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 846,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "530:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 849,
                "mutability": "mutable",
                "name": "buyerOffer",
                "nameLocation": "597:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "590:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 848,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "590:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 851,
                "mutability": "mutable",
                "name": "buyerCard",
                "nameLocation": "659:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "652:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 850,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "652:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 853,
                "mutability": "mutable",
                "name": "tradeComplete",
                "nameLocation": "696:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "691:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 852,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 855,
                "mutability": "mutable",
                "name": "tradeAvailable",
                "nameLocation": "725:14:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "720:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 854,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 857,
                "mutability": "mutable",
                "name": "ownerAddr",
                "nameLocation": "758:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "750:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 856,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "750:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 859,
                "mutability": "mutable",
                "name": "buyerAddr",
                "nameLocation": "786:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "778:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 858,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "778:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "tradeCard",
            "nameLocation": "413:9:5",
            "nodeType": "StructDefinition",
            "scope": 1268,
            "src": "406:397:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e6c598e",
            "id": 864,
            "mutability": "mutable",
            "name": "trades",
            "nameLocation": "830:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1268,
            "src": "811:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
              "typeString": "struct tradeGame.tradeCard[]"
            },
            "typeName": {
              "baseType": {
                "id": 862,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 861,
                  "name": "tradeCard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 860,
                  "src": "811:9:5"
                },
                "referencedDeclaration": 860,
                "src": "811:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_tradeCard_$860_storage_ptr",
                  "typeString": "struct tradeGame.tradeCard"
                }
              },
              "id": 863,
              "nodeType": "ArrayTypeName",
              "src": "811:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage_ptr",
                "typeString": "struct tradeGame.tradeCard[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ef75dff9",
            "id": 869,
            "mutability": "mutable",
            "name": "ownerToTrade",
            "nameLocation": "880:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 1268,
            "src": "843:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
              "typeString": "mapping(address => struct tradeGame.tradeCard)"
            },
            "typeName": {
              "id": 868,
              "keyType": {
                "id": 865,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "851:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "843:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                "typeString": "mapping(address => struct tradeGame.tradeCard)"
              },
              "valueType": {
                "id": 867,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 866,
                  "name": "tradeCard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 860,
                  "src": "862:9:5"
                },
                "referencedDeclaration": 860,
                "src": "862:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_tradeCard_$860_storage_ptr",
                  "typeString": "struct tradeGame.tradeCard"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 936,
              "nodeType": "Block",
              "src": "1122:545:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 877,
                              "name": "ownerToPlayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "1141:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                                "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                              }
                            },
                            "id": 880,
                            "indexExpression": {
                              "expression": {
                                "id": 878,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1155:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1155:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1141:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$59_storage",
                              "typeString": "struct initializeGame.Player storage ref"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "1141:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 882,
                          "name": "_ownerOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "1178:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "1141:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1133:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:57:5"
                },
                {
                  "expression": {
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 886,
                        "name": "ownerToTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "1201:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                          "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                        }
                      },
                      "id": 889,
                      "indexExpression": {
                        "expression": {
                          "id": 887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1214:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1214:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1201:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                        "typeString": "struct tradeGame.tradeCard storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 891,
                          "name": "_ownerOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "1252:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 892,
                          "name": "_ownerCard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 873,
                          "src": "1278:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1303:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1319:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1335:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1355:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 897,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1374:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1374:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1407:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1399:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 899,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1399:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1399:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 890,
                        "name": "tradeCard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "1228:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_tradeCard_$860_storage_ptr_$",
                          "typeString": "type(struct tradeGame.tradeCard storage pointer)"
                        }
                      },
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1228:192:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tradeCard_$860_memory_ptr",
                        "typeString": "struct tradeGame.tradeCard memory"
                      }
                    },
                    "src": "1201:219:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                      "typeString": "struct tradeGame.tradeCard storage ref"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:219:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 909,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "1443:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 912,
                        "indexExpression": {
                          "expression": {
                            "id": 910,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1456:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1456:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1443:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      ],
                      "expression": {
                        "id": 906,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "1431:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                        }
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1431:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage_ptr_$_t_struct$_tradeCard_$860_storage_$returns$__$bound_to$_t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct tradeGame.tradeCard storage ref[] storage pointer,struct tradeGame.tradeCard storage ref)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:37:5"
                },
                {
                  "expression": {
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 915,
                        "name": "cardToOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1479:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 917,
                      "indexExpression": {
                        "id": 916,
                        "name": "_ownerCard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "1491:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1479:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1513:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1505:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1505:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1505:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1479:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:36:5"
                },
                {
                  "expression": {
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 924,
                          "name": "ownerToPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1582:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                            "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                          }
                        },
                        "id": 927,
                        "indexExpression": {
                          "expression": {
                            "id": 925,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1596:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1596:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1582:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$59_storage",
                          "typeString": "struct initializeGame.Player storage ref"
                        }
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "1582:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 929,
                      "name": "_ownerOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "1619:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1582:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "1582:48:5"
                },
                {
                  "expression": {
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 932,
                      "name": "currentTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "1641:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1658:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1641:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:18:5"
                }
              ]
            },
            "functionSelector": "604c528d",
            "id": 937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTrade",
            "nameLocation": "1065:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "_ownerOffer",
                  "nameLocation": "1083:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "1076:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "_ownerCard",
                  "nameLocation": "1103:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "1096:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:39:5"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:0:5"
            },
            "scope": 1268,
            "src": "1056:611:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 949,
              "nodeType": "Block",
              "src": "1739:64:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 944,
                        "name": "ownerToTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "1757:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                          "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                        }
                      },
                      "id": 946,
                      "indexExpression": {
                        "id": 945,
                        "name": "ownerAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "1770:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1757:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                        "typeString": "struct tradeGame.tradeCard storage ref"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tradeAvailable",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 855,
                    "src": "1757:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 943,
                  "id": 948,
                  "nodeType": "Return",
                  "src": "1750:45:5"
                }
              ]
            },
            "functionSelector": "afc779b8",
            "id": 950,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retTrade",
            "nameLocation": "1684:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "ownerAddr",
                  "nameLocation": "1701:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "1693:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:19:5"
            },
            "returnParameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "1733:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1732:6:5"
            },
            "scope": 1268,
            "src": "1675:128:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 959,
              "nodeType": "Block",
              "src": "1876:32:5",
              "statements": [
                {
                  "expression": {
                    "id": 957,
                    "name": "trades",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 864,
                    "src": "1894:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                      "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 956,
                  "id": 958,
                  "nodeType": "Return",
                  "src": "1887:13:5"
                }
              ]
            },
            "functionSelector": "a6113551",
            "id": 960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retAllTrades",
            "nameLocation": "1820:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:2:5"
            },
            "returnParameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "1856:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct tradeGame.tradeCard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 953,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 952,
                        "name": "tradeCard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 860,
                        "src": "1856:9:5"
                      },
                      "referencedDeclaration": 860,
                      "src": "1856:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tradeCard_$860_storage_ptr",
                        "typeString": "struct tradeGame.tradeCard"
                      }
                    },
                    "id": 954,
                    "nodeType": "ArrayTypeName",
                    "src": "1856:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage_ptr",
                      "typeString": "struct tradeGame.tradeCard[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:20:5"
            },
            "scope": 1268,
            "src": "1811:97:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 996,
              "nodeType": "Block",
              "src": "1971:229:5",
              "statements": [
                {
                  "assignments": [
                    966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 966,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1990:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 996,
                      "src": "1982:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1982:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 968,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1998:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1982:17:5"
                },
                {
                  "body": {
                    "id": 991,
                    "nodeType": "Block",
                    "src": "2058:116:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 980,
                                "name": "trades",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 864,
                                "src": "2077:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                  "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                                }
                              },
                              "id": 982,
                              "indexExpression": {
                                "id": 981,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 966,
                                "src": "2084:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2077:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 983,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 857,
                            "src": "2077:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 984,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2104:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2104:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2077:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 990,
                        "nodeType": "IfStatement",
                        "src": "2073:90:5",
                        "trueBody": {
                          "id": 989,
                          "nodeType": "Block",
                          "src": "2116:47:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 987,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 966,
                                "src": "2142:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 964,
                              "id": 988,
                              "nodeType": "Return",
                              "src": "2135:12:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 973,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 966,
                      "src": "2026:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 974,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "2034:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                        }
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2034:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2026:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 992,
                  "initializationExpression": {
                    "expression": {
                      "id": 971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 969,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "2015:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2023:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2015:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 972,
                    "nodeType": "ExpressionStatement",
                    "src": "2015:9:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2049:7:5",
                      "subExpression": {
                        "id": 977,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "2049:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 979,
                    "nodeType": "ExpressionStatement",
                    "src": "2049:7:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "2010:164:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 993,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2184:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:8:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "2184:8:5"
                }
              ]
            },
            "functionSelector": "53b32eb2",
            "id": 997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retTradeIndex",
            "nameLocation": "1925:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:2:5"
            },
            "returnParameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 997,
                  "src": "1962:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1961:9:5"
            },
            "scope": 1268,
            "src": "1916:284:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "2439:626:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1007,
                              "name": "ownerToPlayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "2458:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                                "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                              }
                            },
                            "id": 1010,
                            "indexExpression": {
                              "expression": {
                                "id": 1008,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2472:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2472:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2458:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$59_storage",
                              "typeString": "struct initializeGame.Player storage ref"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "2458:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1012,
                          "name": "_buyerOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "2495:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "2458:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1006,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2450:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:57:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1017,
                            "name": "ownerToTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "2589:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                              "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                            }
                          },
                          "id": 1019,
                          "indexExpression": {
                            "id": 1018,
                            "name": "_ownerAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "2602:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2589:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                            "typeString": "struct tradeGame.tradeCard storage ref"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tradeAvailable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 855,
                        "src": "2589:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2581:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1024,
                          "name": "_buyerOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "2648:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2663:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2648:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2640:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2640:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:25:5"
                },
                {
                  "expression": {
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1029,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2678:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 1031,
                        "indexExpression": {
                          "id": 1030,
                          "name": "_ownerAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "2691:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2678:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      },
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyerOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "2678:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1033,
                      "name": "_buyerOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "2716:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2678:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:49:5"
                },
                {
                  "expression": {
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1036,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2738:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 1038,
                        "indexExpression": {
                          "id": 1037,
                          "name": "_ownerAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "2751:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2738:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      },
                      "id": 1039,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyerCard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 851,
                      "src": "2738:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1040,
                      "name": "_buyerCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "2775:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2738:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:47:5"
                },
                {
                  "expression": {
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1043,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2796:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 1045,
                        "indexExpression": {
                          "id": 1044,
                          "name": "_ownerAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "2809:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2796:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyerAddr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 859,
                      "src": "2796:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1049,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2841:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2841:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2833:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2833:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2833:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2796:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1053,
                  "nodeType": "ExpressionStatement",
                  "src": "2796:56:5"
                },
                {
                  "expression": {
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1054,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2863:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 1056,
                        "indexExpression": {
                          "id": 1055,
                          "name": "_ownerAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "2876:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2863:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tradeAvailable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 855,
                      "src": "2863:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2905:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2863:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1060,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:47:5"
                },
                {
                  "expression": {
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1061,
                          "name": "ownerToPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2923:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                            "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                          }
                        },
                        "id": 1064,
                        "indexExpression": {
                          "expression": {
                            "id": 1062,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2937:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2937:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2923:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$59_storage",
                          "typeString": "struct initializeGame.Player storage ref"
                        }
                      },
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "2923:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1066,
                      "name": "_buyerOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "2960:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2923:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:48:5"
                },
                {
                  "expression": {
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1069,
                        "name": "cardToOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3021:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1071,
                      "indexExpression": {
                        "id": 1070,
                        "name": "_buyerCard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "3033:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3021:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3055:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3047:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3047:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3047:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3021:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:36:5"
                }
              ]
            },
            "functionSelector": "0737f031",
            "id": 1079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "offerTrade",
            "nameLocation": "2328:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "_buyerOffer",
                  "nameLocation": "2356:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "2349:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "_buyerCard",
                  "nameLocation": "2385:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "2378:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "_ownerAddr",
                  "nameLocation": "2414:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "2406:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2338:93:5"
            },
            "returnParameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:5"
            },
            "scope": 1268,
            "src": "2319:746:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1266,
              "nodeType": "Block",
              "src": "3232:1575:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1085,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3251:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3251:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1087,
                              "name": "ownerToTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "3265:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                              }
                            },
                            "id": 1090,
                            "indexExpression": {
                              "expression": {
                                "id": 1088,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3278:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3278:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3265:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 857,
                          "src": "3265:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3251:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3243:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3243:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:57:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1096,
                              "name": "ownerToTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "3319:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                              }
                            },
                            "id": 1099,
                            "indexExpression": {
                              "expression": {
                                "id": 1097,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3332:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3332:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3319:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tradeAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 855,
                          "src": "3319:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3362:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3319:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3311:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:57:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1105,
                      "name": "_tradeConfirm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "3385:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3402:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3385:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1173,
                  "nodeType": "IfStatement",
                  "src": "3381:647:5",
                  "trueBody": {
                    "id": 1172,
                    "nodeType": "Block",
                    "src": "3409:619:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1108,
                                "name": "ownerToPlayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "3489:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                                  "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                                }
                              },
                              "id": 1114,
                              "indexExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1109,
                                    "name": "ownerToTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 869,
                                    "src": "3503:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                      "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                    }
                                  },
                                  "id": 1112,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1110,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3516:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3516:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3503:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                    "typeString": "struct tradeGame.tradeCard storage ref"
                                  }
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 857,
                                "src": "3503:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3489:49:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$59_storage",
                                "typeString": "struct initializeGame.Player storage ref"
                              }
                            },
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "3489:75:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1116,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3568:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1119,
                              "indexExpression": {
                                "expression": {
                                  "id": 1117,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3581:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3581:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3568:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyerOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "3568:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "3489:114:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1122,
                        "nodeType": "ExpressionStatement",
                        "src": "3489:114:5"
                      },
                      {
                        "expression": {
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1123,
                              "name": "cardToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "3668:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1129,
                            "indexExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1124,
                                  "name": "ownerToTrade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "3680:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                    "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                  }
                                },
                                "id": 1127,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1125,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3693:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3693:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3680:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                  "typeString": "struct tradeGame.tradeCard storage ref"
                                }
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyerCard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 851,
                              "src": "3680:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3668:47:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1130,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3718:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1133,
                              "indexExpression": {
                                "expression": {
                                  "id": 1131,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3749:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3749:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3718:56:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyerAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 859,
                            "src": "3718:66:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3668:116:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1136,
                        "nodeType": "ExpressionStatement",
                        "src": "3668:116:5"
                      },
                      {
                        "expression": {
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1137,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3801:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1140,
                              "indexExpression": {
                                "expression": {
                                  "id": 1138,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3814:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3814:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3801:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "3801:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3839:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3801:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1144,
                        "nodeType": "ExpressionStatement",
                        "src": "3801:39:5"
                      },
                      {
                        "expression": {
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1145,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3855:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1148,
                              "indexExpression": {
                                "expression": {
                                  "id": 1146,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3868:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3868:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3855:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerCard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 851,
                            "src": "3855:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3892:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3855:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1152,
                        "nodeType": "ExpressionStatement",
                        "src": "3855:38:5"
                      },
                      {
                        "expression": {
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1153,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3908:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1156,
                              "indexExpression": {
                                "expression": {
                                  "id": 1154,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3921:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3921:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3908:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 859,
                            "src": "3908:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3953:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3945:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1158,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3945:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3945:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3908:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1163,
                        "nodeType": "ExpressionStatement",
                        "src": "3908:47:5"
                      },
                      {
                        "expression": {
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1164,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3970:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1167,
                              "indexExpression": {
                                "expression": {
                                  "id": 1165,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3983:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3983:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3970:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1168,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tradeAvailable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 855,
                            "src": "3970:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4012:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3970:46:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "3970:46:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1174,
                      "name": "_tradeConfirm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "4044:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4061:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4044:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1265,
                  "nodeType": "IfStatement",
                  "src": "4040:760:5",
                  "trueBody": {
                    "id": 1264,
                    "nodeType": "Block",
                    "src": "4067:733:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1177,
                                "name": "ownerToPlayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "4141:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                                  "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                                }
                              },
                              "id": 1180,
                              "indexExpression": {
                                "expression": {
                                  "id": 1178,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4155:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4155:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4141:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$59_storage",
                                "typeString": "struct initializeGame.Player storage ref"
                              }
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "4141:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1182,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4178:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1185,
                              "indexExpression": {
                                "expression": {
                                  "id": 1183,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4191:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4191:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4178:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1186,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyerOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "4178:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4141:90:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1188,
                        "nodeType": "ExpressionStatement",
                        "src": "4141:90:5"
                      },
                      {
                        "expression": {
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1189,
                              "name": "cardToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "4295:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1195,
                            "indexExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1190,
                                  "name": "ownerToTrade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "4307:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                    "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                  }
                                },
                                "id": 1193,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1191,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4320:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4320:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4307:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                  "typeString": "struct tradeGame.tradeCard storage ref"
                                }
                              },
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyerCard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 851,
                              "src": "4307:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4295:47:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1196,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4345:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4345:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4295:60:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1199,
                        "nodeType": "ExpressionStatement",
                        "src": "4295:60:5"
                      },
                      {
                        "expression": {
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1200,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4372:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1203,
                              "indexExpression": {
                                "expression": {
                                  "id": 1201,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4385:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4385:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4372:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "4372:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4410:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4372:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "4372:39:5"
                      },
                      {
                        "expression": {
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1208,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4426:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1211,
                              "indexExpression": {
                                "expression": {
                                  "id": 1209,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4439:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4439:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4426:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerCard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 851,
                            "src": "4426:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4463:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4426:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "4426:38:5"
                      },
                      {
                        "expression": {
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1216,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4479:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1219,
                              "indexExpression": {
                                "expression": {
                                  "id": 1217,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4492:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4492:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4479:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 859,
                            "src": "4479:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4524:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4516:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1221,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4516:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4516:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4479:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1226,
                        "nodeType": "ExpressionStatement",
                        "src": "4479:47:5"
                      },
                      {
                        "expression": {
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1227,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4541:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1230,
                              "indexExpression": {
                                "expression": {
                                  "id": 1228,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4554:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4554:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4541:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1231,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tradeAvailable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 855,
                            "src": "4541:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4583:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4541:46:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1234,
                        "nodeType": "ExpressionStatement",
                        "src": "4541:46:5"
                      },
                      {
                        "assignments": [
                          1237
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1237,
                            "mutability": "mutable",
                            "name": "tempTrade",
                            "nameLocation": "4621:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1264,
                            "src": "4604:26:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_memory_ptr",
                              "typeString": "struct tradeGame.tradeCard"
                            },
                            "typeName": {
                              "id": 1236,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1235,
                                "name": "tradeCard",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 860,
                                "src": "4604:9:5"
                              },
                              "referencedDeclaration": 860,
                              "src": "4604:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage_ptr",
                                "typeString": "struct tradeGame.tradeCard"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1244,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1238,
                            "name": "trades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 864,
                            "src": "4633:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                            }
                          },
                          "id": 1243,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1239,
                                "name": "trades",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 864,
                                "src": "4640:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                  "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                                }
                              },
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4640:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4656:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4640:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4633:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                            "typeString": "struct tradeGame.tradeCard storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4604:54:5"
                      },
                      {
                        "expression": {
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4673:32:5",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1245,
                              "name": "trades",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "4680:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                              }
                            },
                            "id": 1250,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1246,
                                  "name": "trades",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 864,
                                  "src": "4687:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                    "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                                  }
                                },
                                "id": 1247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4687:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4703:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4687:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4680:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1252,
                        "nodeType": "ExpressionStatement",
                        "src": "4673:32:5"
                      },
                      {
                        "expression": {
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1253,
                              "name": "trades",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "4720:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                              }
                            },
                            "id": 1256,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1254,
                                "name": "retTradeIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "4727:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4727:15:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4720:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1257,
                            "name": "tempTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "4746:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_memory_ptr",
                              "typeString": "struct tradeGame.tradeCard memory"
                            }
                          },
                          "src": "4720:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                            "typeString": "struct tradeGame.tradeCard storage ref"
                          }
                        },
                        "id": 1259,
                        "nodeType": "ExpressionStatement",
                        "src": "4720:35:5"
                      },
                      {
                        "expression": {
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1260,
                            "name": "currentTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "4770:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4787:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4770:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1263,
                        "nodeType": "ExpressionStatement",
                        "src": "4770:18:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a7def311",
            "id": 1267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradeComplete",
            "nameLocation": "3191:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "_tradeConfirm",
                  "nameLocation": "3210:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "3205:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3204:20:5"
            },
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:0:5"
            },
            "scope": 1268,
            "src": "3182:1625:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1269,
        "src": "305:4505:5",
        "usedErrors": []
      }
    ],
    "src": "0:4812:5"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/tradeGame.sol",
    "exportedSymbols": {
      "initializeGame": [
        267
      ],
      "roundsGame": [
        644
      ],
      "tradeGame": [
        1268
      ]
    },
    "id": 1269,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 840,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:5"
      },
      {
        "absolutePath": "project:/contracts/roundsGame.sol",
        "file": "./roundsGame.sol",
        "id": 841,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1269,
        "sourceUnit": 645,
        "src": "28:26:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 842,
              "name": "roundsGame",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 644,
              "src": "327:10:5"
            },
            "id": 843,
            "nodeType": "InheritanceSpecifier",
            "src": "327:10:5"
          }
        ],
        "canonicalName": "tradeGame",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1268,
        "linearizedBaseContracts": [
          1268,
          644,
          267
        ],
        "name": "tradeGame",
        "nameLocation": "314:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "tradeGame.tradeCard",
            "id": 860,
            "members": [
              {
                "constant": false,
                "id": 845,
                "mutability": "mutable",
                "name": "ownerOffer",
                "nameLocation": "441:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "434:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 844,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "434:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 847,
                "mutability": "mutable",
                "name": "ownerCard",
                "nameLocation": "537:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "530:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 846,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "530:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 849,
                "mutability": "mutable",
                "name": "buyerOffer",
                "nameLocation": "597:10:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "590:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 848,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "590:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 851,
                "mutability": "mutable",
                "name": "buyerCard",
                "nameLocation": "659:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "652:16:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 850,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "652:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 853,
                "mutability": "mutable",
                "name": "tradeComplete",
                "nameLocation": "696:13:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "691:18:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 852,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "691:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 855,
                "mutability": "mutable",
                "name": "tradeAvailable",
                "nameLocation": "725:14:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "720:19:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 854,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "720:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 857,
                "mutability": "mutable",
                "name": "ownerAddr",
                "nameLocation": "758:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "750:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 856,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "750:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 859,
                "mutability": "mutable",
                "name": "buyerAddr",
                "nameLocation": "786:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 860,
                "src": "778:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 858,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "778:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "tradeCard",
            "nameLocation": "413:9:5",
            "nodeType": "StructDefinition",
            "scope": 1268,
            "src": "406:397:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e6c598e",
            "id": 864,
            "mutability": "mutable",
            "name": "trades",
            "nameLocation": "830:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1268,
            "src": "811:25:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
              "typeString": "struct tradeGame.tradeCard[]"
            },
            "typeName": {
              "baseType": {
                "id": 862,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 861,
                  "name": "tradeCard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 860,
                  "src": "811:9:5"
                },
                "referencedDeclaration": 860,
                "src": "811:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_tradeCard_$860_storage_ptr",
                  "typeString": "struct tradeGame.tradeCard"
                }
              },
              "id": 863,
              "nodeType": "ArrayTypeName",
              "src": "811:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage_ptr",
                "typeString": "struct tradeGame.tradeCard[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ef75dff9",
            "id": 869,
            "mutability": "mutable",
            "name": "ownerToTrade",
            "nameLocation": "880:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 1268,
            "src": "843:49:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
              "typeString": "mapping(address => struct tradeGame.tradeCard)"
            },
            "typeName": {
              "id": 868,
              "keyType": {
                "id": 865,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "851:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "843:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                "typeString": "mapping(address => struct tradeGame.tradeCard)"
              },
              "valueType": {
                "id": 867,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 866,
                  "name": "tradeCard",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 860,
                  "src": "862:9:5"
                },
                "referencedDeclaration": 860,
                "src": "862:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_tradeCard_$860_storage_ptr",
                  "typeString": "struct tradeGame.tradeCard"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 936,
              "nodeType": "Block",
              "src": "1122:545:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 877,
                              "name": "ownerToPlayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "1141:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                                "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                              }
                            },
                            "id": 880,
                            "indexExpression": {
                              "expression": {
                                "id": 878,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1155:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1155:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1141:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$59_storage",
                              "typeString": "struct initializeGame.Player storage ref"
                            }
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "1141:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 882,
                          "name": "_ownerOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "1178:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "1141:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1133:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1133:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:57:5"
                },
                {
                  "expression": {
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 886,
                        "name": "ownerToTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "1201:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                          "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                        }
                      },
                      "id": 889,
                      "indexExpression": {
                        "expression": {
                          "id": 887,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1214:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1214:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1201:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                        "typeString": "struct tradeGame.tradeCard storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 891,
                          "name": "_ownerOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "1252:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "id": 892,
                          "name": "_ownerCard",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 873,
                          "src": "1278:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1303:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1319:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1335:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "74727565",
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1355:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 897,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1374:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 898,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1374:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 901,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1407:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1399:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 899,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1399:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1399:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 890,
                        "name": "tradeCard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 860,
                        "src": "1228:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_tradeCard_$860_storage_ptr_$",
                          "typeString": "type(struct tradeGame.tradeCard storage pointer)"
                        }
                      },
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1228:192:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tradeCard_$860_memory_ptr",
                        "typeString": "struct tradeGame.tradeCard memory"
                      }
                    },
                    "src": "1201:219:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                      "typeString": "struct tradeGame.tradeCard storage ref"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "1201:219:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 909,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "1443:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 912,
                        "indexExpression": {
                          "expression": {
                            "id": 910,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1456:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1456:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1443:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      ],
                      "expression": {
                        "id": 906,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "1431:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                        }
                      },
                      "id": 908,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1431:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage_ptr_$_t_struct$_tradeCard_$860_storage_$returns$__$bound_to$_t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct tradeGame.tradeCard storage ref[] storage pointer,struct tradeGame.tradeCard storage ref)"
                      }
                    },
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1431:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "1431:37:5"
                },
                {
                  "expression": {
                    "id": 922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 915,
                        "name": "cardToOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "1479:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 917,
                      "indexExpression": {
                        "id": 916,
                        "name": "_ownerCard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 873,
                        "src": "1491:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1479:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1513:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 919,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1505:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 918,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1505:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 921,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1505:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1479:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 923,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:36:5"
                },
                {
                  "expression": {
                    "id": 930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 924,
                          "name": "ownerToPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "1582:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                            "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                          }
                        },
                        "id": 927,
                        "indexExpression": {
                          "expression": {
                            "id": 925,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1596:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1596:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1582:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$59_storage",
                          "typeString": "struct initializeGame.Player storage ref"
                        }
                      },
                      "id": 928,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "1582:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 929,
                      "name": "_ownerOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 871,
                      "src": "1619:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "1582:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 931,
                  "nodeType": "ExpressionStatement",
                  "src": "1582:48:5"
                },
                {
                  "expression": {
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 932,
                      "name": "currentTrades",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "1641:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 933,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1658:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1641:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "1641:18:5"
                }
              ]
            },
            "functionSelector": "604c528d",
            "id": 937,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startTrade",
            "nameLocation": "1065:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 871,
                  "mutability": "mutable",
                  "name": "_ownerOffer",
                  "nameLocation": "1083:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "1076:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 870,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1076:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "_ownerCard",
                  "nameLocation": "1103:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 937,
                  "src": "1096:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1096:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1075:39:5"
            },
            "returnParameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1122:0:5"
            },
            "scope": 1268,
            "src": "1056:611:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 949,
              "nodeType": "Block",
              "src": "1739:64:5",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 944,
                        "name": "ownerToTrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 869,
                        "src": "1757:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                          "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                        }
                      },
                      "id": 946,
                      "indexExpression": {
                        "id": 945,
                        "name": "ownerAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 939,
                        "src": "1770:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1757:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                        "typeString": "struct tradeGame.tradeCard storage ref"
                      }
                    },
                    "id": 947,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "tradeAvailable",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 855,
                    "src": "1757:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 943,
                  "id": 948,
                  "nodeType": "Return",
                  "src": "1750:45:5"
                }
              ]
            },
            "functionSelector": "afc779b8",
            "id": 950,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retTrade",
            "nameLocation": "1684:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 939,
                  "mutability": "mutable",
                  "name": "ownerAddr",
                  "nameLocation": "1701:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "1693:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1693:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1692:19:5"
            },
            "returnParameters": {
              "id": 943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 950,
                  "src": "1733:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 941,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1733:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1732:6:5"
            },
            "scope": 1268,
            "src": "1675:128:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 959,
              "nodeType": "Block",
              "src": "1876:32:5",
              "statements": [
                {
                  "expression": {
                    "id": 957,
                    "name": "trades",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 864,
                    "src": "1894:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                      "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 956,
                  "id": 958,
                  "nodeType": "Return",
                  "src": "1887:13:5"
                }
              ]
            },
            "functionSelector": "a6113551",
            "id": 960,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retAllTrades",
            "nameLocation": "1820:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 951,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1832:2:5"
            },
            "returnParameters": {
              "id": 956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 955,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 960,
                  "src": "1856:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct tradeGame.tradeCard[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 953,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 952,
                        "name": "tradeCard",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 860,
                        "src": "1856:9:5"
                      },
                      "referencedDeclaration": 860,
                      "src": "1856:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_tradeCard_$860_storage_ptr",
                        "typeString": "struct tradeGame.tradeCard"
                      }
                    },
                    "id": 954,
                    "nodeType": "ArrayTypeName",
                    "src": "1856:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage_ptr",
                      "typeString": "struct tradeGame.tradeCard[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1855:20:5"
            },
            "scope": 1268,
            "src": "1811:97:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 996,
              "nodeType": "Block",
              "src": "1971:229:5",
              "statements": [
                {
                  "assignments": [
                    966
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 966,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "1990:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 996,
                      "src": "1982:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 965,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1982:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 968,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1998:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1982:17:5"
                },
                {
                  "body": {
                    "id": 991,
                    "nodeType": "Block",
                    "src": "2058:116:5",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 980,
                                "name": "trades",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 864,
                                "src": "2077:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                  "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                                }
                              },
                              "id": 982,
                              "indexExpression": {
                                "id": 981,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 966,
                                "src": "2084:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2077:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 983,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 857,
                            "src": "2077:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 984,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2104:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2104:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2077:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 990,
                        "nodeType": "IfStatement",
                        "src": "2073:90:5",
                        "trueBody": {
                          "id": 989,
                          "nodeType": "Block",
                          "src": "2116:47:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 987,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 966,
                                "src": "2142:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 964,
                              "id": 988,
                              "nodeType": "Return",
                              "src": "2135:12:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 973,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 966,
                      "src": "2026:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 974,
                        "name": "trades",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "2034:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                        }
                      },
                      "id": 975,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2034:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2026:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 992,
                  "initializationExpression": {
                    "expression": {
                      "id": 971,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 969,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "2015:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "hexValue": "30",
                        "id": 970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2023:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2015:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 972,
                    "nodeType": "ExpressionStatement",
                    "src": "2015:9:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2049:7:5",
                      "subExpression": {
                        "id": 977,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 966,
                        "src": "2049:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 979,
                    "nodeType": "ExpressionStatement",
                    "src": "2049:7:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "2010:164:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 993,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "2184:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:8:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "2184:8:5"
                }
              ]
            },
            "functionSelector": "53b32eb2",
            "id": 997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "retTradeIndex",
            "nameLocation": "1925:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:2:5"
            },
            "returnParameters": {
              "id": 964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 997,
                  "src": "1962:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1961:9:5"
            },
            "scope": 1268,
            "src": "1916:284:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1078,
              "nodeType": "Block",
              "src": "2439:626:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1013,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1007,
                              "name": "ownerToPlayer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "2458:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                                "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                              }
                            },
                            "id": 1010,
                            "indexExpression": {
                              "expression": {
                                "id": 1008,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2472:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2472:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2458:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Player_$59_storage",
                              "typeString": "struct initializeGame.Player storage ref"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50,
                          "src": "2458:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1012,
                          "name": "_buyerOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "2495:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "2458:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1006,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2450:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1015,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:57:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1017,
                            "name": "ownerToTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "2589:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                              "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                            }
                          },
                          "id": 1019,
                          "indexExpression": {
                            "id": 1018,
                            "name": "_ownerAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1003,
                            "src": "2602:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2589:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                            "typeString": "struct tradeGame.tradeCard storage ref"
                          }
                        },
                        "id": 1020,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tradeAvailable",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 855,
                        "src": "2589:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2581:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2581:48:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "2581:48:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1024,
                          "name": "_buyerOffer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 999,
                          "src": "2648:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2663:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2648:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2640:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2640:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:25:5"
                },
                {
                  "expression": {
                    "id": 1034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1029,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2678:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 1031,
                        "indexExpression": {
                          "id": 1030,
                          "name": "_ownerAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "2691:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2678:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      },
                      "id": 1032,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyerOffer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 849,
                      "src": "2678:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1033,
                      "name": "_buyerOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "2716:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2678:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1035,
                  "nodeType": "ExpressionStatement",
                  "src": "2678:49:5"
                },
                {
                  "expression": {
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1036,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2738:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 1038,
                        "indexExpression": {
                          "id": 1037,
                          "name": "_ownerAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "2751:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2738:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      },
                      "id": 1039,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyerCard",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 851,
                      "src": "2738:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1040,
                      "name": "_buyerCard",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "2775:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2738:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:47:5"
                },
                {
                  "expression": {
                    "id": 1052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1043,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2796:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 1045,
                        "indexExpression": {
                          "id": 1044,
                          "name": "_ownerAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "2809:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2796:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      },
                      "id": 1046,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "buyerAddr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 859,
                      "src": "2796:34:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1049,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2841:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2841:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2833:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1047,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2833:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1051,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2833:19:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2796:56:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1053,
                  "nodeType": "ExpressionStatement",
                  "src": "2796:56:5"
                },
                {
                  "expression": {
                    "id": 1059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1054,
                          "name": "ownerToTrade",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 869,
                          "src": "2863:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                            "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                          }
                        },
                        "id": 1056,
                        "indexExpression": {
                          "id": 1055,
                          "name": "_ownerAddr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1003,
                          "src": "2876:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2863:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                          "typeString": "struct tradeGame.tradeCard storage ref"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "tradeAvailable",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 855,
                      "src": "2863:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2905:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2863:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1060,
                  "nodeType": "ExpressionStatement",
                  "src": "2863:47:5"
                },
                {
                  "expression": {
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 1061,
                          "name": "ownerToPlayer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71,
                          "src": "2923:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                            "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                          }
                        },
                        "id": 1064,
                        "indexExpression": {
                          "expression": {
                            "id": 1062,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2937:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2937:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2923:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Player_$59_storage",
                          "typeString": "struct initializeGame.Player storage ref"
                        }
                      },
                      "id": 1065,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 50,
                      "src": "2923:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 1066,
                      "name": "_buyerOffer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 999,
                      "src": "2960:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "2923:48:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:48:5"
                },
                {
                  "expression": {
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1069,
                        "name": "cardToOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66,
                        "src": "3021:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1071,
                      "indexExpression": {
                        "id": 1070,
                        "name": "_buyerCard",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "3033:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3021:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3055:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 1073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3047:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3047:7:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1075,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3047:10:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3021:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:36:5"
                }
              ]
            },
            "functionSelector": "0737f031",
            "id": 1079,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "offerTrade",
            "nameLocation": "2328:10:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 999,
                  "mutability": "mutable",
                  "name": "_buyerOffer",
                  "nameLocation": "2356:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "2349:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 998,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "_buyerCard",
                  "nameLocation": "2385:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "2378:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "mutability": "mutable",
                  "name": "_ownerAddr",
                  "nameLocation": "2414:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1079,
                  "src": "2406:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2338:93:5"
            },
            "returnParameters": {
              "id": 1005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:5"
            },
            "scope": 1268,
            "src": "2319:746:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1266,
              "nodeType": "Block",
              "src": "3232:1575:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1085,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3251:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3251:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1087,
                              "name": "ownerToTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "3265:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                              }
                            },
                            "id": 1090,
                            "indexExpression": {
                              "expression": {
                                "id": 1088,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3278:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1089,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3278:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3265:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref"
                            }
                          },
                          "id": 1091,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerAddr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 857,
                          "src": "3265:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3251:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3243:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3243:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "3243:57:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1096,
                              "name": "ownerToTrade",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "3319:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                              }
                            },
                            "id": 1099,
                            "indexExpression": {
                              "expression": {
                                "id": 1097,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3332:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3332:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3319:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref"
                            }
                          },
                          "id": 1100,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "tradeAvailable",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 855,
                          "src": "3319:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3362:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "3319:48:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3311:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:57:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1105,
                      "name": "_tradeConfirm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "3385:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "66616c7365",
                      "id": 1106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3402:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "3385:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1173,
                  "nodeType": "IfStatement",
                  "src": "3381:647:5",
                  "trueBody": {
                    "id": 1172,
                    "nodeType": "Block",
                    "src": "3409:619:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1108,
                                "name": "ownerToPlayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "3489:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                                  "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                                }
                              },
                              "id": 1114,
                              "indexExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1109,
                                    "name": "ownerToTrade",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 869,
                                    "src": "3503:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                      "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                    }
                                  },
                                  "id": 1112,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1110,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3516:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3516:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3503:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                    "typeString": "struct tradeGame.tradeCard storage ref"
                                  }
                                },
                                "id": 1113,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ownerAddr",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 857,
                                "src": "3503:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3489:49:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$59_storage",
                                "typeString": "struct initializeGame.Player storage ref"
                              }
                            },
                            "id": 1115,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "3489:75:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1116,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3568:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1119,
                              "indexExpression": {
                                "expression": {
                                  "id": 1117,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3581:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3581:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3568:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1120,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyerOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "3568:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "3489:114:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1122,
                        "nodeType": "ExpressionStatement",
                        "src": "3489:114:5"
                      },
                      {
                        "expression": {
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1123,
                              "name": "cardToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "3668:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1129,
                            "indexExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1124,
                                  "name": "ownerToTrade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "3680:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                    "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                  }
                                },
                                "id": 1127,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1125,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "3693:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1126,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3693:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3680:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                  "typeString": "struct tradeGame.tradeCard storage ref"
                                }
                              },
                              "id": 1128,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyerCard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 851,
                              "src": "3680:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3668:47:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1130,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3718:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1133,
                              "indexExpression": {
                                "expression": {
                                  "id": 1131,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3749:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1132,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3749:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3718:56:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyerAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 859,
                            "src": "3718:66:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3668:116:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1136,
                        "nodeType": "ExpressionStatement",
                        "src": "3668:116:5"
                      },
                      {
                        "expression": {
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1137,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3801:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1140,
                              "indexExpression": {
                                "expression": {
                                  "id": 1138,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3814:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3814:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3801:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "3801:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3839:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3801:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1144,
                        "nodeType": "ExpressionStatement",
                        "src": "3801:39:5"
                      },
                      {
                        "expression": {
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1145,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3855:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1148,
                              "indexExpression": {
                                "expression": {
                                  "id": 1146,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3868:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1147,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3868:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3855:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerCard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 851,
                            "src": "3855:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3892:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3855:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1152,
                        "nodeType": "ExpressionStatement",
                        "src": "3855:38:5"
                      },
                      {
                        "expression": {
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1153,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3908:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1156,
                              "indexExpression": {
                                "expression": {
                                  "id": 1154,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3921:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3921:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3908:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1157,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 859,
                            "src": "3908:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3953:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3945:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1158,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3945:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3945:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3908:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1163,
                        "nodeType": "ExpressionStatement",
                        "src": "3908:47:5"
                      },
                      {
                        "expression": {
                          "id": 1170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1164,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3970:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1167,
                              "indexExpression": {
                                "expression": {
                                  "id": 1165,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3983:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1166,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3983:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3970:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1168,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tradeAvailable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 855,
                            "src": "3970:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1169,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4012:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "3970:46:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1171,
                        "nodeType": "ExpressionStatement",
                        "src": "3970:46:5"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1174,
                      "name": "_tradeConfirm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1081,
                      "src": "4044:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 1175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4061:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4044:21:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1265,
                  "nodeType": "IfStatement",
                  "src": "4040:760:5",
                  "trueBody": {
                    "id": 1264,
                    "nodeType": "Block",
                    "src": "4067:733:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1177,
                                "name": "ownerToPlayer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71,
                                "src": "4141:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$59_storage_$",
                                  "typeString": "mapping(address => struct initializeGame.Player storage ref)"
                                }
                              },
                              "id": 1180,
                              "indexExpression": {
                                "expression": {
                                  "id": 1178,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4155:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4155:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4141:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Player_$59_storage",
                                "typeString": "struct initializeGame.Player storage ref"
                              }
                            },
                            "id": 1181,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50,
                            "src": "4141:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1182,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4178:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1185,
                              "indexExpression": {
                                "expression": {
                                  "id": 1183,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4191:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4191:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4178:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1186,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "buyerOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "4178:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "4141:90:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1188,
                        "nodeType": "ExpressionStatement",
                        "src": "4141:90:5"
                      },
                      {
                        "expression": {
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1189,
                              "name": "cardToOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 66,
                              "src": "4295:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 1195,
                            "indexExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1190,
                                  "name": "ownerToTrade",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "4307:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                    "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                  }
                                },
                                "id": 1193,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1191,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967281,
                                    "src": "4320:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1192,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "4320:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4307:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                  "typeString": "struct tradeGame.tradeCard storage ref"
                                }
                              },
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "buyerCard",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 851,
                              "src": "4307:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4295:47:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1196,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4345:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4345:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4295:60:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1199,
                        "nodeType": "ExpressionStatement",
                        "src": "4295:60:5"
                      },
                      {
                        "expression": {
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1200,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4372:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1203,
                              "indexExpression": {
                                "expression": {
                                  "id": 1201,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4385:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1202,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4385:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4372:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1204,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerOffer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 849,
                            "src": "4372:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4410:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4372:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "4372:39:5"
                      },
                      {
                        "expression": {
                          "id": 1214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1208,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4426:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1211,
                              "indexExpression": {
                                "expression": {
                                  "id": 1209,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4439:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4439:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4426:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerCard",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 851,
                            "src": "4426:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1213,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4463:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4426:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "id": 1215,
                        "nodeType": "ExpressionStatement",
                        "src": "4426:38:5"
                      },
                      {
                        "expression": {
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1216,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4479:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1219,
                              "indexExpression": {
                                "expression": {
                                  "id": 1217,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4492:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4492:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4479:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "buyerAddr",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 859,
                            "src": "4479:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4524:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4516:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1221,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4516:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4516:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4479:47:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1226,
                        "nodeType": "ExpressionStatement",
                        "src": "4479:47:5"
                      },
                      {
                        "expression": {
                          "id": 1233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1227,
                                "name": "ownerToTrade",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "4541:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_tradeCard_$860_storage_$",
                                  "typeString": "mapping(address => struct tradeGame.tradeCard storage ref)"
                                }
                              },
                              "id": 1230,
                              "indexExpression": {
                                "expression": {
                                  "id": 1228,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "4554:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "4554:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4541:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref"
                              }
                            },
                            "id": 1231,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "tradeAvailable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 855,
                            "src": "4541:39:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1232,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4583:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4541:46:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1234,
                        "nodeType": "ExpressionStatement",
                        "src": "4541:46:5"
                      },
                      {
                        "assignments": [
                          1237
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1237,
                            "mutability": "mutable",
                            "name": "tempTrade",
                            "nameLocation": "4621:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1264,
                            "src": "4604:26:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_memory_ptr",
                              "typeString": "struct tradeGame.tradeCard"
                            },
                            "typeName": {
                              "id": 1236,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1235,
                                "name": "tradeCard",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 860,
                                "src": "4604:9:5"
                              },
                              "referencedDeclaration": 860,
                              "src": "4604:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_tradeCard_$860_storage_ptr",
                                "typeString": "struct tradeGame.tradeCard"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1244,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1238,
                            "name": "trades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 864,
                            "src": "4633:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                            }
                          },
                          "id": 1243,
                          "indexExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1239,
                                "name": "trades",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 864,
                                "src": "4640:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                  "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                                }
                              },
                              "id": 1240,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4640:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1241,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4656:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "4640:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4633:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                            "typeString": "struct tradeGame.tradeCard storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4604:54:5"
                      },
                      {
                        "expression": {
                          "id": 1251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4673:32:5",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1245,
                              "name": "trades",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "4680:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                              }
                            },
                            "id": 1250,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1246,
                                  "name": "trades",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 864,
                                  "src": "4687:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                    "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                                  }
                                },
                                "id": 1247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4687:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4703:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4687:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4680:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1252,
                        "nodeType": "ExpressionStatement",
                        "src": "4673:32:5"
                      },
                      {
                        "expression": {
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1253,
                              "name": "trades",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "4720:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_tradeCard_$860_storage_$dyn_storage",
                                "typeString": "struct tradeGame.tradeCard storage ref[] storage ref"
                              }
                            },
                            "id": 1256,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1254,
                                "name": "retTradeIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 997,
                                "src": "4727:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4727:15:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4720:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                              "typeString": "struct tradeGame.tradeCard storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1257,
                            "name": "tempTrade",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1237,
                            "src": "4746:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_tradeCard_$860_memory_ptr",
                              "typeString": "struct tradeGame.tradeCard memory"
                            }
                          },
                          "src": "4720:35:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_tradeCard_$860_storage",
                            "typeString": "struct tradeGame.tradeCard storage ref"
                          }
                        },
                        "id": 1259,
                        "nodeType": "ExpressionStatement",
                        "src": "4720:35:5"
                      },
                      {
                        "expression": {
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1260,
                            "name": "currentTrades",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 296,
                            "src": "4770:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 1261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4787:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "4770:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1263,
                        "nodeType": "ExpressionStatement",
                        "src": "4770:18:5"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "a7def311",
            "id": 1267,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tradeComplete",
            "nameLocation": "3191:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1081,
                  "mutability": "mutable",
                  "name": "_tradeConfirm",
                  "nameLocation": "3210:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1267,
                  "src": "3205:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1080,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3204:20:5"
            },
            "returnParameters": {
              "id": 1083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3232:0:5"
            },
            "scope": 1268,
            "src": "3182:1625:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1269,
        "src": "305:4505:5",
        "usedErrors": []
      }
    ],
    "src": "0:4812:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-20T11:25:19.923Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}